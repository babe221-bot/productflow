{"version":3,"file":"static/js/184.c8dc896c.chunk.js","mappings":"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","sources":["pages/Maintenance.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  MenuItem,\r\n  LinearProgress,\r\n  Alert,\r\n  IconButton,\r\n  Tabs,\r\n  Tab,\r\n} from '@mui/material';\r\nimport {\r\n  Warning,\r\n  Error,\r\n  Info,\r\n  CheckCircle,\r\n  Refresh,\r\n  Add,\r\n} from '@mui/icons-material';\r\nimport axios from 'axios';\r\n\r\nconst Maintenance = () => {\r\n  const [alerts, setAlerts] = useState([]);\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [priorityFilter, setPriorityFilter] = useState('');\r\n  const [tabValue, setTabValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    fetchMaintenanceData();\r\n  }, [priorityFilter]);\r\n\r\n  const fetchMaintenanceData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const alertParams = priorityFilter ? { priority: priorityFilter } : {};\r\n      const [alertsResponse, logsResponse] = await Promise.all([\r\n        axios.get('/maintenance', { params: alertParams }),\r\n        axios.get('/maintenance/logs')\r\n      ]);\r\n      setAlerts(alertsResponse.data);\r\n      setLogs(logsResponse.data);\r\n      setError('');\r\n    } catch (error) {\r\n      console.error('Failed to fetch maintenance data:', error);\r\n      setError('Failed to load maintenance data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority) => {\r\n    switch (priority) {\r\n      case 'critical':\r\n        return 'error';\r\n      case 'high':\r\n        return 'warning';\r\n      case 'medium':\r\n        return 'info';\r\n      case 'low':\r\n        return 'success';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getPriorityIcon = (priority) => {\r\n    switch (priority) {\r\n      case 'critical':\r\n        return <Error />;\r\n      case 'high':\r\n        return <Warning />;\r\n      case 'medium':\r\n        return <Info />;\r\n      case 'low':\r\n        return <CheckCircle />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'success';\r\n      case 'in_progress':\r\n        return 'warning';\r\n      case 'scheduled':\r\n        return 'info';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Maintenance Management\r\n        </Typography>\r\n        <LinearProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h4\">Maintenance Management</Typography>\r\n        <IconButton onClick={fetchMaintenanceData} color=\"primary\">\r\n          <Refresh />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs value={tabValue} onChange={(e, newValue) => setTabValue(newValue)}>\r\n          <Tab label=\"Active Alerts\" />\r\n          <Tab label=\"Maintenance Logs\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Active Alerts Tab */}\r\n      {tabValue === 0 && (\r\n        <Box>\r\n          <Box display=\"flex\" gap={2} mb={3}>\r\n            <TextField\r\n              select\r\n              label=\"Filter by Priority\"\r\n              value={priorityFilter}\r\n              onChange={(e) => setPriorityFilter(e.target.value)}\r\n              sx={{ minWidth: 200 }}\r\n            >\r\n              <MenuItem value=\"\">All Priorities</MenuItem>\r\n              <MenuItem value=\"critical\">Critical</MenuItem>\r\n              <MenuItem value=\"high\">High</MenuItem>\r\n              <MenuItem value=\"medium\">Medium</MenuItem>\r\n              <MenuItem value=\"low\">Low</MenuItem>\r\n            </TextField>\r\n          </Box>\r\n\r\n          <Grid container spacing={3}>\r\n            {alerts.map((alert) => (\r\n              <Grid item xs={12} md={6} lg={4} key={alert.id}>\r\n                <Card sx={{ height: '100%' }}>\r\n                  <CardContent>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        {alert.title}\r\n                      </Typography>\r\n                      <Chip\r\n                        icon={getPriorityIcon(alert.priority)}\r\n                        label={alert.priority.charAt(0).toUpperCase() + alert.priority.slice(1)}\r\n                        color={getPriorityColor(alert.priority)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                      Type: {alert.type.charAt(0).toUpperCase() + alert.type.slice(1)}\r\n                    </Typography>\r\n\r\n                    <Typography variant=\"body2\" paragraph>\r\n                      {alert.description}\r\n                    </Typography>\r\n\r\n                    {alert.predicted_date && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Predicted Date: {new Date(alert.predicted_date).toLocaleDateString()}\r\n                      </Typography>\r\n                    )}\r\n\r\n                    {alert.confidence && (\r\n                      <Box mt={2} mb={2}>\r\n                        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                          <Typography variant=\"body2\">Confidence</Typography>\r\n                          <Typography variant=\"body2\" fontWeight=\"bold\">\r\n                            {Math.round(alert.confidence * 100)}%\r\n                          </Typography>\r\n                        </Box>\r\n                        <LinearProgress\r\n                          variant=\"determinate\"\r\n                          value={alert.confidence * 100}\r\n                          color={alert.confidence > 0.8 ? 'success' : 'warning'}\r\n                          sx={{ height: 6, borderRadius: 3 }}\r\n                        />\r\n                      </Box>\r\n                    )}\r\n\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Created: {new Date(alert.created_at).toLocaleDateString()}\r\n                    </Typography>\r\n\r\n                    <Box mt={2}>\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        size=\"small\"\r\n                        fullWidth\r\n                      >\r\n                        Acknowledge\r\n                      </Button>\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {alerts.length === 0 && (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No maintenance alerts\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                {priorityFilter ? 'Try changing the filter criteria' : 'All equipment is running smoothly'}\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {/* Maintenance Logs Tab */}\r\n      {tabValue === 1 && (\r\n        <Box>\r\n          <Box display=\"flex\" justify=\"flex-end\" mb={3}>\r\n            <Button\r\n              variant=\"contained\"\r\n              startIcon={<Add />}\r\n              onClick={() => {/* TODO: Open create maintenance log dialog */}}\r\n            >\r\n              New Maintenance Log\r\n            </Button>\r\n          </Box>\r\n\r\n          <Grid container spacing={3}>\r\n            {logs.map((log) => (\r\n              <Grid item xs={12} md={6} key={log.id}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\r\n                      <Typography variant=\"h6\" component=\"div\">\r\n                        {log.maintenance_type.charAt(0).toUpperCase() + log.maintenance_type.slice(1)} Maintenance\r\n                      </Typography>\r\n                      <Chip\r\n                        label={log.status.charAt(0).toUpperCase() + log.status.slice(1)}\r\n                        color={getStatusColor(log.status)}\r\n                        size=\"small\"\r\n                      />\r\n                    </Box>\r\n\r\n                    <Typography variant=\"body2\" paragraph>\r\n                      {log.description}\r\n                    </Typography>\r\n\r\n                    {log.cost && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Cost: ${log.cost.toLocaleString()}\r\n                      </Typography>\r\n                    )}\r\n\r\n                    {log.duration_hours && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Duration: {log.duration_hours} hours\r\n                      </Typography>\r\n                    )}\r\n\r\n                    {log.parts_replaced && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Parts Replaced: {log.parts_replaced}\r\n                      </Typography>\r\n                    )}\r\n\r\n                    <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                      Scheduled: {log.scheduled_date \r\n                        ? new Date(log.scheduled_date).toLocaleDateString()\r\n                        : 'Not scheduled'\r\n                      }\r\n                    </Typography>\r\n\r\n                    {log.completed_date && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\" gutterBottom>\r\n                        Completed: {new Date(log.completed_date).toLocaleDateString()}\r\n                      </Typography>\r\n                    )}\r\n\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Created: {new Date(log.created_at).toLocaleDateString()}\r\n                    </Typography>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n\r\n          {logs.length === 0 && (\r\n            <Box textAlign=\"center\" py={4}>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                No maintenance logs\r\n              </Typography>\r\n              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                No maintenance activities have been logged yet\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Maintenance;"],"names":["Maintenance","alerts","setAlerts","useState","logs","setLogs","loading","setLoading","error","setError","priorityFilter","setPriorityFilter","tabValue","setTabValue","useEffect","fetchMaintenanceData","async","alertParams","priority","alertsResponse","logsResponse","Promise","all","axios","get","params","data","console","getPriorityColor","getPriorityIcon","_jsx","Error","Warning","Info","CheckCircle","getStatusColor","status","_jsxs","Box","children","Typography","variant","gutterBottom","LinearProgress","display","justifyContent","alignItems","mb","IconButton","onClick","color","Refresh","sx","borderBottom","borderColor","Tabs","value","onChange","e","newValue","Tab","label","Alert","severity","gap","TextField","select","target","minWidth","MenuItem","Grid","container","spacing","map","alert","item","xs","md","lg","Card","height","CardContent","component","title","Chip","icon","charAt","toUpperCase","slice","size","type","paragraph","description","predicted_date","Date","toLocaleDateString","confidence","mt","fontWeight","Math","round","borderRadius","created_at","Button","fullWidth","id","length","textAlign","py","justify","startIcon","Add","log","maintenance_type","cost","toLocaleString","duration_hours","parts_replaced","scheduled_date","completed_date"],"sourceRoot":""}