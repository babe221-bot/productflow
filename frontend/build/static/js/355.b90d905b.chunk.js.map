{"version":3,"file":"static/js/355.b90d905b.chunk.js","mappings":"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","sources":["../node_modules/@mui/material/LinearProgress/linearProgressClasses.js","../node_modules/@mui/material/LinearProgress/LinearProgress.js","../node_modules/@mui/icons-material/esm/ArrowBack.js","pages/EquipmentDetail.js"],"sourcesContent":["import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getLinearProgressUtilityClass(slot) {\n  return generateUtilityClass('MuiLinearProgress', slot);\n}\nconst linearProgressClasses = generateUtilityClasses('MuiLinearProgress', ['root', 'colorPrimary', 'colorSecondary', 'determinate', 'indeterminate', 'buffer', 'query', 'dashed', 'dashedColorPrimary', 'dashedColorSecondary', 'bar', 'barColorPrimary', 'barColorSecondary', 'bar1Indeterminate', 'bar1Determinate', 'bar1Buffer', 'bar2Indeterminate', 'bar2Buffer']);\nexport default linearProgressClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"color\", \"value\", \"valueBuffer\", \"variant\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4,\n  _t5,\n  _t6;\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { keyframes, css } from '@mui/system';\nimport { darken, lighten } from '@mui/system/colorManipulator';\nimport { useRtl } from '@mui/system/RtlProvider';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getLinearProgressUtilityClass } from './linearProgressClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst TRANSITION_DURATION = 4; // seconds\nconst indeterminate1Keyframe = keyframes(_t || (_t = _`\n  0% {\n    left: -35%;\n    right: 100%;\n  }\n\n  60% {\n    left: 100%;\n    right: -90%;\n  }\n\n  100% {\n    left: 100%;\n    right: -90%;\n  }\n`));\nconst indeterminate2Keyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    left: -200%;\n    right: 100%;\n  }\n\n  60% {\n    left: 107%;\n    right: -8%;\n  }\n\n  100% {\n    left: 107%;\n    right: -8%;\n  }\n`));\nconst bufferKeyframe = keyframes(_t3 || (_t3 = _`\n  0% {\n    opacity: 1;\n    background-position: 0 -23px;\n  }\n\n  60% {\n    opacity: 0;\n    background-position: 0 -23px;\n  }\n\n  100% {\n    opacity: 1;\n    background-position: -200px -23px;\n  }\n`));\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    color\n  } = ownerState;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, variant],\n    dashed: ['dashed', `dashedColor${capitalize(color)}`],\n    bar1: ['bar', `barColor${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar1Indeterminate', variant === 'determinate' && 'bar1Determinate', variant === 'buffer' && 'bar1Buffer'],\n    bar2: ['bar', variant !== 'buffer' && `barColor${capitalize(color)}`, variant === 'buffer' && `color${capitalize(color)}`, (variant === 'indeterminate' || variant === 'query') && 'bar2Indeterminate', variant === 'buffer' && 'bar2Buffer']\n  };\n  return composeClasses(slots, getLinearProgressUtilityClass, classes);\n};\nconst getColorShade = (theme, color) => {\n  if (color === 'inherit') {\n    return 'currentColor';\n  }\n  if (theme.vars) {\n    return theme.vars.palette.LinearProgress[`${color}Bg`];\n  }\n  return theme.palette.mode === 'light' ? lighten(theme.palette[color].main, 0.62) : darken(theme.palette[color].main, 0.5);\n};\nconst LinearProgressRoot = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[`color${capitalize(ownerState.color)}`], styles[ownerState.variant]];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  position: 'relative',\n  overflow: 'hidden',\n  display: 'block',\n  height: 4,\n  zIndex: 0,\n  // Fix Safari's bug during composition of different paint.\n  '@media print': {\n    colorAdjust: 'exact'\n  },\n  backgroundColor: getColorShade(theme, ownerState.color)\n}, ownerState.color === 'inherit' && ownerState.variant !== 'buffer' && {\n  backgroundColor: 'none',\n  '&::before': {\n    content: '\"\"',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    backgroundColor: 'currentColor',\n    opacity: 0.3\n  }\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: 'transparent'\n}, ownerState.variant === 'query' && {\n  transform: 'rotate(180deg)'\n}));\nconst LinearProgressDashed = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Dashed',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.dashed, styles[`dashedColor${capitalize(ownerState.color)}`]];\n  }\n})(({\n  ownerState,\n  theme\n}) => {\n  const backgroundColor = getColorShade(theme, ownerState.color);\n  return _extends({\n    position: 'absolute',\n    marginTop: 0,\n    height: '100%',\n    width: '100%'\n  }, ownerState.color === 'inherit' && {\n    opacity: 0.3\n  }, {\n    backgroundImage: `radial-gradient(${backgroundColor} 0%, ${backgroundColor} 16%, transparent 42%)`,\n    backgroundSize: '10px 10px',\n    backgroundPosition: '0 -23px'\n  });\n}, css(_t4 || (_t4 = _`\n    animation: ${0} 3s infinite linear;\n  `), bufferKeyframe));\nconst LinearProgressBar1 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar1',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar1Indeterminate, ownerState.variant === 'determinate' && styles.bar1Determinate, ownerState.variant === 'buffer' && styles.bar1Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left',\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.variant === 'determinate' && {\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}, ownerState.variant === 'buffer' && {\n  zIndex: 1,\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t5 || (_t5 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.65, 0.815, 0.735, 0.395) infinite;\n    `), indeterminate1Keyframe));\nconst LinearProgressBar2 = styled('span', {\n  name: 'MuiLinearProgress',\n  slot: 'Bar2',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.bar, styles[`barColor${capitalize(ownerState.color)}`], (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && styles.bar2Indeterminate, ownerState.variant === 'buffer' && styles.bar2Buffer];\n  }\n})(({\n  ownerState,\n  theme\n}) => _extends({\n  width: '100%',\n  position: 'absolute',\n  left: 0,\n  bottom: 0,\n  top: 0,\n  transition: 'transform 0.2s linear',\n  transformOrigin: 'left'\n}, ownerState.variant !== 'buffer' && {\n  backgroundColor: ownerState.color === 'inherit' ? 'currentColor' : (theme.vars || theme).palette[ownerState.color].main\n}, ownerState.color === 'inherit' && {\n  opacity: 0.3\n}, ownerState.variant === 'buffer' && {\n  backgroundColor: getColorShade(theme, ownerState.color),\n  transition: `transform .${TRANSITION_DURATION}s linear`\n}), ({\n  ownerState\n}) => (ownerState.variant === 'indeterminate' || ownerState.variant === 'query') && css(_t6 || (_t6 = _`\n      width: auto;\n      animation: ${0} 2.1s cubic-bezier(0.165, 0.84, 0.44, 1) 1.15s infinite;\n    `), indeterminate2Keyframe));\n\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\nconst LinearProgress = /*#__PURE__*/React.forwardRef(function LinearProgress(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiLinearProgress'\n  });\n  const {\n      className,\n      color = 'primary',\n      value,\n      valueBuffer,\n      variant = 'indeterminate'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const isRtl = useRtl();\n  const rootProps = {};\n  const inlineStyles = {\n    bar1: {},\n    bar2: {}\n  };\n  if (variant === 'determinate' || variant === 'buffer') {\n    if (value !== undefined) {\n      rootProps['aria-valuenow'] = Math.round(value);\n      rootProps['aria-valuemin'] = 0;\n      rootProps['aria-valuemax'] = 100;\n      let transform = value - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar1.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a value prop ' + 'when using the determinate or buffer variant of LinearProgress .');\n    }\n  }\n  if (variant === 'buffer') {\n    if (valueBuffer !== undefined) {\n      let transform = (valueBuffer || 0) - 100;\n      if (isRtl) {\n        transform = -transform;\n      }\n      inlineStyles.bar2.transform = `translateX(${transform}%)`;\n    } else if (process.env.NODE_ENV !== 'production') {\n      console.error('MUI: You need to provide a valueBuffer prop ' + 'when using the buffer variant of LinearProgress.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(LinearProgressRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    role: \"progressbar\"\n  }, rootProps, {\n    ref: ref\n  }, other, {\n    children: [variant === 'buffer' ? /*#__PURE__*/_jsx(LinearProgressDashed, {\n      className: classes.dashed,\n      ownerState: ownerState\n    }) : null, /*#__PURE__*/_jsx(LinearProgressBar1, {\n      className: classes.bar1,\n      ownerState: ownerState,\n      style: inlineStyles.bar1\n    }), variant === 'determinate' ? null : /*#__PURE__*/_jsx(LinearProgressBar2, {\n      className: classes.bar2,\n      ownerState: ownerState,\n      style: inlineStyles.bar2\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? LinearProgress.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The value of the progress indicator for the determinate and buffer variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n  /**\n   * The value for the buffer variant.\n   * Value between 0 and 100.\n   */\n  valueBuffer: PropTypes.number,\n  /**\n   * The variant to use.\n   * Use indeterminate or query when there is no progress value.\n   * @default 'indeterminate'\n   */\n  variant: PropTypes.oneOf(['buffer', 'determinate', 'indeterminate', 'query'])\n} : void 0;\nexport default LinearProgress;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20z\"\n}), 'ArrowBack');","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Chip,\r\n  LinearProgress,\r\n  Alert,\r\n  IconButton,\r\n  Button,\r\n} from '@mui/material';\r\nimport {\r\n  ArrowBack,\r\n  Refresh,\r\n  CheckCircle,\r\n  Warning,\r\n  Error,\r\n  Build,\r\n} from '@mui/icons-material';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { Line } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from 'chart.js';\r\nimport axios from 'axios';\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst EquipmentDetail = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [equipment, setEquipment] = useState(null);\r\n  const [sensorData, setSensorData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchEquipmentDetail();\r\n    fetchSensorData();\r\n  }, [id]);\r\n\r\n  const fetchEquipmentDetail = async () => {\r\n    try {\r\n      const response = await axios.get(`/equipment/${id}`);\r\n      setEquipment(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch equipment:', error);\r\n      setError('Failed to load equipment details');\r\n    }\r\n  };\r\n\r\n  const fetchSensorData = async () => {\r\n    try {\r\n      const response = await axios.get(`/equipment/${id}/sensors`);\r\n      setSensorData(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch sensor data:', error);\r\n      setError('Failed to load sensor data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status) {\r\n      case 'operational':\r\n        return 'success';\r\n      case 'warning':\r\n        return 'warning';\r\n      case 'critical':\r\n        return 'error';\r\n      case 'maintenance':\r\n        return 'info';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status) => {\r\n    switch (status) {\r\n      case 'operational':\r\n        return <CheckCircle />;\r\n      case 'warning':\r\n        return <Warning />;\r\n      case 'critical':\r\n        return <Error />;\r\n      case 'maintenance':\r\n        return <Build />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getHealthScoreColor = (score) => {\r\n    if (score >= 80) return 'success';\r\n    if (score >= 60) return 'warning';\r\n    return 'error';\r\n  };\r\n\r\n  const prepareSensorChartData = (sensorType) => {\r\n    const filteredData = sensorData\r\n      .filter(data => data.sensor_type === sensorType)\r\n      .sort((a, b) => new Date(a.timestamp) - new Date(b.timestamp))\r\n      .slice(-20); // Last 20 readings\r\n\r\n    return {\r\n      labels: filteredData.map(data => \r\n        new Date(data.timestamp).toLocaleTimeString()\r\n      ),\r\n      datasets: [\r\n        {\r\n          label: `${sensorType.charAt(0).toUpperCase() + sensorType.slice(1)} (${filteredData[0]?.unit || ''})`,\r\n          data: filteredData.map(data => data.value),\r\n          borderColor: 'rgb(75, 192, 192)',\r\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n      title: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n          <IconButton onClick={() => navigate('/equipment')} sx={{ mr: 2 }}>\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h4\">Equipment Details</Typography>\r\n        </Box>\r\n        <LinearProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n          <IconButton onClick={() => navigate('/equipment')} sx={{ mr: 2 }}>\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h4\">Equipment Details</Typography>\r\n        </Box>\r\n        <Alert severity=\"error\">{error}</Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!equipment) {\r\n    return (\r\n      <Box>\r\n        <Box display=\"flex\" alignItems=\"center\" mb={3}>\r\n          <IconButton onClick={() => navigate('/equipment')} sx={{ mr: 2 }}>\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h4\">Equipment Details</Typography>\r\n        </Box>\r\n        <Alert severity=\"warning\">Equipment not found</Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const sensorTypes = [...new Set(sensorData.map(data => data.sensor_type))];\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <IconButton onClick={() => navigate('/equipment')} sx={{ mr: 2 }}>\r\n            <ArrowBack />\r\n          </IconButton>\r\n          <Typography variant=\"h4\">{equipment.name}</Typography>\r\n        </Box>\r\n        <Box>\r\n          <IconButton onClick={() => { fetchEquipmentDetail(); fetchSensorData(); }} color=\"primary\">\r\n            <Refresh />\r\n          </IconButton>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Grid container spacing={3}>\r\n        {/* Equipment Information */}\r\n        <Grid item xs={12} md={4}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Equipment Information\r\n              </Typography>\r\n              \r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Status\r\n                </Typography>\r\n                <Chip\r\n                  icon={getStatusIcon(equipment.status)}\r\n                  label={equipment.status.charAt(0).toUpperCase() + equipment.status.slice(1)}\r\n                  color={getStatusColor(equipment.status)}\r\n                  sx={{ mt: 0.5 }}\r\n                />\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Type\r\n                </Typography>\r\n                <Typography variant=\"body1\">{equipment.type}</Typography>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Location\r\n                </Typography>\r\n                <Typography variant=\"body1\">{equipment.location}</Typography>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Capacity\r\n                </Typography>\r\n                <Typography variant=\"body1\">{equipment.capacity} units/hour</Typography>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Installation Date\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {equipment.installation_date \r\n                    ? new Date(equipment.installation_date).toLocaleDateString()\r\n                    : 'Not specified'\r\n                  }\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box mb={2}>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  Last Maintenance\r\n                </Typography>\r\n                <Typography variant=\"body1\">\r\n                  {equipment.last_maintenance\r\n                    ? new Date(equipment.last_maintenance).toLocaleDateString()\r\n                    : 'Never'\r\n                  }\r\n                </Typography>\r\n              </Box>\r\n\r\n              <Box mt={3}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Health Score\r\n                  </Typography>\r\n                  <Typography variant=\"h6\" color={`${getHealthScoreColor(equipment.health_score)}.main`}>\r\n                    {equipment.health_score}%\r\n                  </Typography>\r\n                </Box>\r\n                <LinearProgress\r\n                  variant=\"determinate\"\r\n                  value={equipment.health_score}\r\n                  color={getHealthScoreColor(equipment.health_score)}\r\n                  sx={{ height: 10, borderRadius: 5 }}\r\n                />\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Sensor Data Charts */}\r\n        <Grid item xs={12} md={8}>\r\n          <Grid container spacing={2}>\r\n            {sensorTypes.map((sensorType) => (\r\n              <Grid item xs={12} md={6} key={sensorType}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography variant=\"h6\" gutterBottom>\r\n                      {sensorType.charAt(0).toUpperCase() + sensorType.slice(1)} Sensor\r\n                    </Typography>\r\n                    <Box sx={{ height: 250 }}>\r\n                      <Line\r\n                        data={prepareSensorChartData(sensorType)}\r\n                        options={chartOptions}\r\n                      />\r\n                    </Box>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Recent Sensor Readings */}\r\n        <Grid item xs={12}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Recent Sensor Readings\r\n              </Typography>\r\n              <Box sx={{ overflowX: 'auto' }}>\r\n                <Box component=\"table\" sx={{ width: '100%', minWidth: 650 }}>\r\n                  <Box component=\"thead\">\r\n                    <Box component=\"tr\">\r\n                      <Box component=\"th\" sx={{ p: 1, textAlign: 'left', fontWeight: 'bold' }}>\r\n                        Sensor Type\r\n                      </Box>\r\n                      <Box component=\"th\" sx={{ p: 1, textAlign: 'left', fontWeight: 'bold' }}>\r\n                        Value\r\n                      </Box>\r\n                      <Box component=\"th\" sx={{ p: 1, textAlign: 'left', fontWeight: 'bold' }}>\r\n                        Unit\r\n                      </Box>\r\n                      <Box component=\"th\" sx={{ p: 1, textAlign: 'left', fontWeight: 'bold' }}>\r\n                        Status\r\n                      </Box>\r\n                      <Box component=\"th\" sx={{ p: 1, textAlign: 'left', fontWeight: 'bold' }}>\r\n                        Timestamp\r\n                      </Box>\r\n                    </Box>\r\n                  </Box>\r\n                  <Box component=\"tbody\">\r\n                    {sensorData.slice(0, 10).map((data) => (\r\n                      <Box component=\"tr\" key={data.id}>\r\n                        <Box component=\"td\" sx={{ p: 1 }}>\r\n                          {data.sensor_type.charAt(0).toUpperCase() + data.sensor_type.slice(1)}\r\n                        </Box>\r\n                        <Box component=\"td\" sx={{ p: 1 }}>\r\n                          {data.value}\r\n                        </Box>\r\n                        <Box component=\"td\" sx={{ p: 1 }}>\r\n                          {data.unit}\r\n                        </Box>\r\n                        <Box component=\"td\" sx={{ p: 1 }}>\r\n                          <Chip\r\n                            label={data.status}\r\n                            color={getStatusColor(data.status)}\r\n                            size=\"small\"\r\n                          />\r\n                        </Box>\r\n                        <Box component=\"td\" sx={{ p: 1 }}>\r\n                          {new Date(data.timestamp).toLocaleString()}\r\n                        </Box>\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default EquipmentDetail;"],"names":["getLinearProgressUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_t5","_t6","_","t","indeterminate1Keyframe","keyframes","indeterminate2Keyframe","bufferKeyframe","getColorShade","theme","color","vars","palette","LinearProgress","mode","lighten","main","darken","LinearProgressRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","variant","_ref","_extends","position","overflow","display","height","zIndex","colorAdjust","backgroundColor","content","left","top","right","bottom","opacity","transform","LinearProgressDashed","dashed","_ref2","marginTop","width","backgroundImage","backgroundSize","backgroundPosition","css","LinearProgressBar1","bar","bar1Indeterminate","bar1Determinate","bar1Buffer","_ref3","transition","transformOrigin","_ref4","LinearProgressBar2","bar2Indeterminate","bar2Buffer","_ref5","_ref6","React","inProps","ref","useDefaultProps","className","value","valueBuffer","other","_objectWithoutPropertiesLoose","classes","slots","bar1","bar2","composeClasses","useUtilityClasses","isRtl","useRtl","rootProps","inlineStyles","undefined","Math","round","process","_jsxs","clsx","role","children","_jsx","style","createSvgIcon","d","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","EquipmentDetail","id","useParams","navigate","useNavigate","equipment","setEquipment","useState","sensorData","setSensorData","loading","setLoading","error","setError","useEffect","fetchEquipmentDetail","fetchSensorData","async","response","axios","get","data","console","getStatusColor","status","getHealthScoreColor","score","prepareSensorChartData","sensorType","_filteredData$","filteredData","filter","sensor_type","sort","a","b","Date","timestamp","slice","labels","map","toLocaleTimeString","datasets","label","charAt","toUpperCase","unit","borderColor","tension","chartOptions","responsive","plugins","legend","title","scales","y","beginAtZero","Box","alignItems","mb","IconButton","onClick","sx","mr","ArrowBack","Typography","Alert","severity","sensorTypes","Set","justifyContent","Refresh","Grid","container","spacing","item","xs","md","Card","CardContent","gutterBottom","Chip","icon","CheckCircle","Warning","Error","Build","getStatusIcon","mt","type","location","capacity","installation_date","toLocaleDateString","last_maintenance","health_score","borderRadius","Line","options","overflowX","component","minWidth","p","textAlign","fontWeight","size","toLocaleString"],"sourceRoot":""}