{"version":3,"file":"static/js/72.451b2cfe.chunk.js","mappings":"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","sources":["utils/format.ts","../node_modules/@mui/icons-material/esm/TrendingUp.js","components/AnimatedCard.tsx","components/GlowingButton.tsx","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/system/esm/colorManipulator.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/icons-material/esm/AttachMoney.js","pages/Dashboard.tsx","hooks/useProduction.ts"],"sourcesContent":["// Utility functions for formatting data\r\n\r\nexport const formatCurrency = (amount: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(amount);\r\n};\r\n\r\nexport const formatNumber = (num: number, decimals: number = 0): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  }).format(num);\r\n};\r\n\r\nexport const formatPercent = (value: number, decimals: number = 1): string => {\r\n  return `${formatNumber(value, decimals)}%`;\r\n};\r\n\r\nexport const formatDate = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatDateTime = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatRelativeTime = (date: string | Date): string => {\r\n  const now = new Date();\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\r\n  return `${Math.floor(diffInSeconds / 86400)}d ago`;\r\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","import React, { useEffect, useRef } from 'react';\r\nimport { Card, CardProps } from '@mui/material';\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\ninterface AnimatedCardProps extends CardProps {\r\n  animationType?: 'fadeInUp' | 'scaleIn' | 'slideInLeft' | 'slideInRight';\r\n  delay?: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AnimatedCard: React.FC<AnimatedCardProps> = ({\r\n  animationType = 'fadeInUp',\r\n  delay = 0,\r\n  children,\r\n  sx,\r\n  ...props\r\n}) => {\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!cardRef.current) return;\r\n\r\n    const card = cardRef.current;\r\n    \r\n    // Set initial state\r\n    anime.set(card, {\r\n      opacity: 0,\r\n      translateY: animationType.includes('Up') ? 30 : 0,\r\n      translateX: animationType.includes('Left') ? -30 : animationType.includes('Right') ? 30 : 0,\r\n      scale: animationType === 'scaleIn' ? 0.8 : 1,\r\n    });\r\n\r\n    // Animate in\r\n    anime({\r\n      targets: card,\r\n      opacity: 1,\r\n      translateY: 0,\r\n      translateX: 0,\r\n      scale: 1,\r\n      duration: 800,\r\n      easing: 'easeOutCubic',\r\n      delay,\r\n    });\r\n\r\n    // Add hover animation\r\n    const handleMouseEnter = () => {\r\n      anime({\r\n        targets: card,\r\n        scale: 1.02,\r\n        translateY: -4,\r\n        duration: 300,\r\n        easing: 'easeOutCubic',\r\n      });\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      anime({\r\n        targets: card,\r\n        scale: 1,\r\n        translateY: 0,\r\n        duration: 300,\r\n        easing: 'easeOutCubic',\r\n      });\r\n    };\r\n\r\n    card.addEventListener('mouseenter', handleMouseEnter);\r\n    card.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    return () => {\r\n      card.removeEventListener('mouseenter', handleMouseEnter);\r\n      card.removeEventListener('mouseleave', handleMouseLeave);\r\n    };\r\n  }, [animationType, delay]);\r\n\r\n  return (\r\n    <Card\r\n      ref={cardRef}\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'visible',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          borderRadius: 'inherit',\r\n          background: 'linear-gradient(45deg, rgba(100, 181, 246, 0.1), rgba(156, 39, 176, 0.1))',\r\n          opacity: 0,\r\n          transition: 'opacity 0.3s ease',\r\n          zIndex: -1,\r\n        },\r\n        '&:hover::before': {\r\n          opacity: 1,\r\n        },\r\n        ...sx,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AnimatedCard;","import React, { useEffect, useRef } from 'react';\r\nimport { Button, ButtonProps } from '@mui/material';\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\ninterface GlowingButtonProps extends ButtonProps {\r\n  glowColor?: string;\r\n  pulseAnimation?: boolean;\r\n}\r\n\r\nconst GlowingButton: React.FC<GlowingButtonProps> = ({\r\n  glowColor = '#64b5f6',\r\n  pulseAnimation = false,\r\n  children,\r\n  sx,\r\n  ...props\r\n}) => {\r\n  const buttonRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!buttonRef.current || !pulseAnimation) return;\r\n\r\n    const button = buttonRef.current;\r\n    \r\n    const pulseAnim = anime({\r\n      targets: button,\r\n      scale: [1, 1.05, 1],\r\n      boxShadow: [\r\n        `0 4px 15px ${glowColor}40`,\r\n        `0 8px 25px ${glowColor}60`,\r\n        `0 4px 15px ${glowColor}40`,\r\n      ],\r\n      duration: 2000,\r\n      loop: true,\r\n      easing: 'easeInOutSine',\r\n    });\r\n\r\n    return () => {\r\n      pulseAnim.pause();\r\n    };\r\n  }, [glowColor, pulseAnimation]);\r\n\r\n  return (\r\n    <Button\r\n      ref={buttonRef}\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        background: `linear-gradient(45deg, ${glowColor}20, ${glowColor}40)`,\r\n        border: `1px solid ${glowColor}60`,\r\n        backdropFilter: 'blur(10px)',\r\n        color: '#ffffff',\r\n        fontWeight: 600,\r\n        textTransform: 'none',\r\n        borderRadius: 2,\r\n        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: '-100%',\r\n          width: '100%',\r\n          height: '100%',\r\n          background: `linear-gradient(90deg, transparent, ${glowColor}30, transparent)`,\r\n          transition: 'left 0.5s ease',\r\n        },\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${glowColor}30, ${glowColor}50)`,\r\n          boxShadow: `0 8px 25px ${glowColor}40`,\r\n          transform: 'translateY(-2px)',\r\n          '&::before': {\r\n            left: '100%',\r\n          },\r\n        },\r\n        '&:active': {\r\n          transform: 'translateY(0px)',\r\n        },\r\n        ...sx,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default GlowingButton;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/* eslint-disable @typescript-eslint/naming-convention */\nimport clamp from '@mui/utils/clamp';\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clampWrapper(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return clamp(value, min, max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clampWrapper(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return emphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n * @param {string} background - CSS color\n * @param {string} overlay - CSS color\n * @param {number} opacity - Opacity multiplier in the range 0 - 1\n * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.\n */\nexport function blend(background, overlay, opacity, gamma = 1.0) {\n  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoney');","import React, { useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Alert,\r\n  Skeleton,\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  Warning,\r\n  CheckCircle,\r\n  Error,\r\n  Build,\r\n  AttachMoney,\r\n} from '@mui/icons-material';\r\nimport { useDashboardSummary } from '../hooks/useProduction';\r\nimport { formatCurrency, formatPercent, formatDateTime } from '../utils/format';\r\nimport { EQUIPMENT_STATUS } from '../constants';\r\nimport AnimatedCard from '../components/AnimatedCard';\r\nimport GlowingButton from '../components/GlowingButton';\r\n\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\ninterface KPIItem {\r\n  label: string;\r\n  value: number | string;\r\n  color: 'success' | 'warning' | 'error' | 'info';\r\n  icon: React.ReactNode;\r\n}\r\n\r\ninterface KPICard {\r\n  title: string;\r\n  icon?: React.ReactNode;\r\n  color: 'success' | 'warning' | 'error' | 'info';\r\n  value?: string | number;\r\n  subtitle?: string;\r\n  items?: KPIItem[];\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const titleRef = useRef<HTMLElement>(null);\r\n  const { data: summary, isLoading, error, dataUpdatedAt } = useDashboardSummary();\r\n\r\n  useEffect(() => {\r\n    // Animate title\r\n    if (titleRef.current) {\r\n      anime({\r\n        targets: titleRef.current,\r\n        translateY: [-30, 0],\r\n        opacity: [0, 1],\r\n        scale: [0.9, 1],\r\n        duration: 1000,\r\n        easing: 'easeOutBack',\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom sx={{ mb: 4 }}>\r\n          Dashboard\r\n        </Typography>\r\n        <Grid container spacing={3}>\r\n          {[1, 2, 3, 4].map((i) => (\r\n            <Grid item xs={12} sm={6} md={3} key={i}>\r\n              <AnimatedCard delay={i * 100}>\r\n                <Box sx={{ p: 3 }}>\r\n                  <Skeleton variant=\"text\" width=\"60%\" height={30} />\r\n                  <Skeleton variant=\"text\" height={50} width=\"80%\" sx={{ my: 2 }} />\r\n                  <Skeleton variant=\"text\" width=\"40%\" height={20} />\r\n                </Box>\r\n              </AnimatedCard>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Dashboard\r\n        </Typography>\r\n        <Alert severity=\"error\" sx={{ mt: 2 }}>\r\n          Failed to load dashboard data. Please try refreshing the page.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!summary) return null;\r\n\r\n  const kpiCards: KPICard[] = [\r\n    {\r\n      title: 'Equipment Status',\r\n      items: [\r\n        {\r\n          label: 'Operational',\r\n          value: summary.operational_equipment,\r\n          color: 'success',\r\n          icon: <CheckCircle />,\r\n        },\r\n        {\r\n          label: 'Warning',\r\n          value: summary.warning_equipment,\r\n          color: 'warning',\r\n          icon: <Warning />,\r\n        },\r\n        {\r\n          label: 'Critical',\r\n          value: summary.critical_equipment,\r\n          color: 'error',\r\n          icon: <Error />,\r\n        },\r\n        {\r\n          label: 'Maintenance',\r\n          value: summary.maintenance_equipment,\r\n          color: 'info',\r\n          icon: <Build />,\r\n        },\r\n      ],\r\n      color: 'success',\r\n    },\r\n    {\r\n      title: 'Production Efficiency',\r\n      value: formatPercent(summary.production_efficiency),\r\n      icon: <TrendingUp />,\r\n      color: summary.production_efficiency >= 90 ? 'success' : 'warning',\r\n      subtitle: summary.production_efficiency >= 90 ? 'Above target threshold' : 'Below target',\r\n    },\r\n    {\r\n      title: 'Active Alerts',\r\n      value: summary.active_alerts,\r\n      icon: <Warning />,\r\n      color: summary.active_alerts > 0 ? 'warning' : 'success',\r\n      subtitle: summary.active_alerts > 0 ? 'Requiring attention' : 'All clear',\r\n    },\r\n    {\r\n      title: 'Cost Savings',\r\n      value: formatCurrency(summary.cost_savings),\r\n      icon: <AttachMoney />,\r\n      color: 'success',\r\n      subtitle: 'This month',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ p: 3, position: 'relative' }}>\r\n      {/* Animated Title */}\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\r\n        <Typography \r\n          ref={titleRef}\r\n          variant=\"h2\" \r\n          sx={{\r\n            background: 'linear-gradient(45deg, #64b5f6, #ab47bc)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            backgroundClip: 'text',\r\n            fontWeight: 700,\r\n            textShadow: '0 4px 8px rgba(0,0,0,0.3)',\r\n          }}\r\n        >\r\n          Production Dashboard\r\n        </Typography>\r\n        \r\n        <GlowingButton \r\n          variant=\"contained\" \r\n          pulseAnimation\r\n          glowColor=\"#64b5f6\"\r\n          startIcon={<TrendingUp />}\r\n        >\r\n          View Analytics\r\n        </GlowingButton>\r\n      </Box>\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h6\" sx={{ color: 'text.secondary', opacity: 0.8 }}>\r\n          Real-time overview of your manufacturing operations\r\n        </Typography>\r\n        <Typography \r\n          variant=\"body2\" \r\n          sx={{ \r\n            color: 'primary.light',\r\n            background: 'rgba(100, 181, 246, 0.1)',\r\n            px: 2,\r\n            py: 0.5,\r\n            borderRadius: 2,\r\n            border: '1px solid rgba(100, 181, 246, 0.3)',\r\n          }}\r\n        >\r\n          Last updated: {formatDateTime(new Date(dataUpdatedAt))}\r\n        </Typography>\r\n      </Box>\r\n\r\n      {/* KPI Cards with Animations */}\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        {kpiCards.map((card, index) => (\r\n          <Grid item xs={12} sm={6} md={3} key={index}>\r\n            <AnimatedCard \r\n              animationType={index % 2 === 0 ? 'fadeInUp' : 'scaleIn'}\r\n              delay={index * 150}\r\n              sx={{\r\n                height: '100%',\r\n                background: 'rgba(10, 25, 41, 0.6)',\r\n                backdropFilter: 'blur(20px)',\r\n                border: '1px solid rgba(100, 181, 246, 0.2)',\r\n                borderRadius: 3,\r\n                overflow: 'visible',\r\n                position: 'relative',\r\n                '&::after': {\r\n                  content: '\"\"',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  right: 0,\r\n                  height: '3px',\r\n                  background: `linear-gradient(45deg, ${card.color === 'success' ? '#00e676' : \r\n                                                           card.color === 'warning' ? '#ff9800' : \r\n                                                           card.color === 'error' ? '#f44336' : '#2196f3'}, \r\n                                                    rgba(255,255,255,0.3))`,\r\n                  borderRadius: '16px 16px 0 0',\r\n                },\r\n              }}\r\n            >\r\n              <Box sx={{ p: 3 }}>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                  {card.icon && (\r\n                    <Box\r\n                      sx={{\r\n                        mr: 2,\r\n                        color: `${card.color}.main`,\r\n                        background: `${card.color === 'success' ? 'rgba(0, 230, 118, 0.1)' : \r\n                                      card.color === 'warning' ? 'rgba(255, 152, 0, 0.1)' : \r\n                                      card.color === 'error' ? 'rgba(244, 67, 54, 0.1)' : 'rgba(33, 150, 243, 0.1)'}`,\r\n                        borderRadius: '50%',\r\n                        p: 1,\r\n                      }}\r\n                    >\r\n                      {card.icon}\r\n                    </Box>\r\n                  )}\r\n                  <Typography variant=\"h6\" sx={{ color: 'text.primary', fontWeight: 600 }}>\r\n                    {card.title}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                {card.items ? (\r\n                  <Box>\r\n                    {card.items.map((item, itemIndex) => (\r\n                      <Box\r\n                        key={itemIndex}\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        alignItems=\"center\"\r\n                        mb={1.5}\r\n                        sx={{\r\n                          p: 1,\r\n                          borderRadius: 1,\r\n                          background: 'rgba(255, 255, 255, 0.02)',\r\n                          border: '1px solid rgba(255, 255, 255, 0.05)',\r\n                        }}\r\n                      >\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                          <Box\r\n                            sx={{\r\n                              mr: 1,\r\n                              color: `${item.color}.main`,\r\n                              fontSize: '1rem',\r\n                            }}\r\n                          >\r\n                            {item.icon}\r\n                          </Box>\r\n                          <Typography variant=\"body2\" sx={{ color: 'text.primary' }}>\r\n                            {item.label}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Chip\r\n                          label={item.value}\r\n                          color={item.color}\r\n                          size=\"small\"\r\n                          sx={{\r\n                            fontWeight: 600,\r\n                            backdropFilter: 'blur(10px)',\r\n                          }}\r\n                        />\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                ) : (\r\n                  <Box>\r\n                    <Typography \r\n                      variant=\"h3\" \r\n                      sx={{ \r\n                        color: `${card.color}.main`,\r\n                        fontWeight: 700,\r\n                        mb: 1,\r\n                        textShadow: '0 2px 4px rgba(0,0,0,0.3)',\r\n                      }}\r\n                    >\r\n                      {card.value}\r\n                    </Typography>\r\n                    {card.subtitle && (\r\n                      <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                        {card.subtitle}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </AnimatedCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Activity and Status Sections */}\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={6}>\r\n          <AnimatedCard animationType=\"slideInLeft\" delay={600}>\r\n            <Box sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'text.primary' }}>\r\n                Recent Activity\r\n              </Typography>\r\n              <Box>\r\n                {[\r\n                  { text: \"Equipment health check completed for CNC Machine #2\", type: \"success\" },\r\n                  { text: \"Maintenance alert generated for Robotic Arm #3\", type: \"warning\" },\r\n                  { text: \"Production efficiency target achieved for Floor A\", type: \"success\" },\r\n                  { text: \"Sensor calibration scheduled for next week\", type: \"info\" },\r\n                ].map((activity, index) => (\r\n                  <Box \r\n                    key={index}\r\n                    sx={{\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      p: 1.5,\r\n                      mb: 1,\r\n                      borderRadius: 2,\r\n                      background: 'rgba(255, 255, 255, 0.03)',\r\n                      border: `1px solid rgba(${activity.type === 'success' ? '0, 230, 118' : \r\n                                                     activity.type === 'warning' ? '255, 152, 0' : \r\n                                                     activity.type === 'info' ? '33, 150, 243' : '255, 255, 255'}, 0.2)`,\r\n                    }}\r\n                  >\r\n                    <Box\r\n                      sx={{\r\n                        width: 8,\r\n                        height: 8,\r\n                        borderRadius: '50%',\r\n                        background: activity.type === 'success' ? '#00e676' : \r\n                                   activity.type === 'warning' ? '#ff9800' : \r\n                                   activity.type === 'info' ? '#2196f3' : '#ffffff',\r\n                        mr: 2,\r\n                      }}\r\n                    />\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                      {activity.text}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n            </Box>\r\n          </AnimatedCard>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <AnimatedCard animationType=\"slideInRight\" delay={800}>\r\n            <Box sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ color: 'text.primary' }}>\r\n                System Status\r\n              </Typography>\r\n              <Box>\r\n                {[\r\n                  { label: \"API Status\", status: \"Online\", color: \"success\" },\r\n                  { label: \"Database\", status: \"Connected\", color: \"success\" },\r\n                  { label: \"Sensor Network\", status: \"Active\", color: \"success\" },\r\n                ].map((item, index) => (\r\n                  <Box \r\n                    key={index}\r\n                    display=\"flex\" \r\n                    justifyContent=\"space-between\" \r\n                    alignItems=\"center\"\r\n                    sx={{\r\n                      p: 1.5,\r\n                      mb: 1,\r\n                      borderRadius: 2,\r\n                      background: 'rgba(255, 255, 255, 0.03)',\r\n                    }}\r\n                  >\r\n                    <Typography variant=\"body2\" sx={{ color: 'text.primary' }}>\r\n                      {item.label}\r\n                    </Typography>\r\n                    <Chip \r\n                      label={item.status} \r\n                      color={item.color as any} \r\n                      size=\"small\" \r\n                      sx={{\r\n                        backdropFilter: 'blur(10px)',\r\n                        fontWeight: 600,\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                ))}\r\n                <Box \r\n                  display=\"flex\" \r\n                  justifyContent=\"space-between\"\r\n                  sx={{\r\n                    p: 1.5,\r\n                    borderRadius: 2,\r\n                    background: 'rgba(255, 255, 255, 0.03)',\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.primary' }}>\r\n                    Last Sync\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: 'primary.light' }}>\r\n                    {formatDateTime(new Date(dataUpdatedAt))}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          </AnimatedCard>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import { useQuery } from '@tanstack/react-query';\r\nimport { productionAPI, maintenanceAPI } from '../services/api';\r\n\r\nexport const useProductionMetrics = () => {\r\n  return useQuery({\r\n    queryKey: ['productionMetrics'],\r\n    queryFn: productionAPI.getProductionMetrics,\r\n    staleTime: 60000, // 1 minute\r\n  });\r\n};\r\n\r\nexport const useDashboardSummary = () => {\r\n  return useQuery({\r\n    queryKey: ['dashboardSummary'],\r\n    queryFn: productionAPI.getDashboardSummary,\r\n    staleTime: 30000, // 30 seconds\r\n    refetchInterval: 30000, // Auto-refresh every 30 seconds\r\n  });\r\n};\r\n\r\nexport const useProductionRecords = (params?: {\r\n  equipment_id?: number;\r\n  shift?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['productionRecords', params],\r\n    queryFn: () => productionAPI.getProductionRecords(params),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceAlerts = (priority?: string) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceAlerts', priority],\r\n    queryFn: () => maintenanceAPI.getMaintenanceAlerts({ priority }),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceLogs = (params?: {\r\n  equipment_id?: number;\r\n  status?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceLogs', params],\r\n    queryFn: () => maintenanceAPI.getMaintenanceLogs(params),\r\n    staleTime: 60000,\r\n  });\r\n};"],"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatNumber","num","decimals","arguments","length","undefined","minimumFractionDigits","maximumFractionDigits","formatPercent","value","formatDateTime","date","d","Date","DateTimeFormat","year","month","day","hour","minute","createSvgIcon","_jsx","anime","require","_ref","animationType","delay","children","sx","props","cardRef","useRef","useEffect","current","card","set","opacity","translateY","includes","translateX","scale","targets","duration","easing","handleMouseEnter","handleMouseLeave","addEventListener","removeEventListener","Card","ref","position","overflow","content","top","left","right","bottom","borderRadius","background","transition","zIndex","glowColor","pulseAnimation","buttonRef","button","pulseAnim","boxShadow","loop","pause","Button","border","backdropFilter","color","fontWeight","textTransform","width","height","transform","getUnit","input","String","match","toUnitless","parseFloat","clampWrapper","min","max","clamp","decomposeColor","type","charAt","slice","re","RegExp","colors","map","n","index","parseInt","Math","round","join","hexToRgb","marker","indexOf","substring","Error","_formatMuiErrorMessage","colorSpace","values","split","shift","recomposeColor","i","alpha","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","styles","ownerState","root","variant","animation","hasChildren","withChildren","fitContent","heightAuto","theme","radiusUnit","shape","radiusValue","_extends","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","visibility","maxWidth","_ref2","css","_ref3","action","hover","React","inProps","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","Boolean","classes","slots","composeClasses","useUtilityClasses","as","clsx","Dashboard","titleRef","data","summary","isLoading","error","dataUpdatedAt","useDashboardSummary","_jsxs","Box","p","Typography","gutterBottom","mb","Grid","container","spacing","item","xs","sm","md","AnimatedCard","my","Alert","severity","mt","kpiCards","title","items","label","operational_equipment","icon","CheckCircle","warning_equipment","Warning","critical_equipment","maintenance_equipment","Build","production_efficiency","TrendingUp","subtitle","active_alerts","cost_savings","AttachMoney","justifyContent","alignItems","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","textShadow","GlowingButton","startIcon","px","py","mr","itemIndex","fontSize","Chip","size","activity","status","useProductionMetrics","useQuery","queryKey","queryFn","productionAPI","getProductionMetrics","staleTime","getDashboardSummary","refetchInterval"],"sourceRoot":""}