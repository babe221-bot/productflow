{"version":3,"file":"static/js/72.75e0516a.chunk.js","mappings":"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","sources":["utils/format.ts","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/material/styles/cssUtils.js","../node_modules/@mui/system/esm/colorManipulator.js","../node_modules/@mui/material/Skeleton/skeletonClasses.js","../node_modules/@mui/material/Skeleton/Skeleton.js","../node_modules/@mui/icons-material/esm/AttachMoney.js","pages/Dashboard.tsx","hooks/useProduction.ts"],"sourcesContent":["// Utility functions for formatting data\r\n\r\nexport const formatCurrency = (amount: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(amount);\r\n};\r\n\r\nexport const formatNumber = (num: number, decimals: number = 0): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  }).format(num);\r\n};\r\n\r\nexport const formatPercent = (value: number, decimals: number = 1): string => {\r\n  return `${formatNumber(value, decimals)}%`;\r\n};\r\n\r\nexport const formatDate = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatDateTime = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatRelativeTime = (date: string | Date): string => {\r\n  const now = new Date();\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\r\n  return `${Math.floor(diffInSeconds / 86400)}d ago`;\r\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import _formatMuiErrorMessage from \"@mui/utils/formatMuiErrorMessage\";\n/* eslint-disable @typescript-eslint/naming-convention */\nimport clamp from '@mui/utils/clamp';\n/**\n * Returns a number whose value is limited to the given range.\n * @param {number} value The value to be clamped\n * @param {number} min The lower boundary of the output range\n * @param {number} max The upper boundary of the output range\n * @returns {number} A number in the range [min, max]\n */\nfunction clampWrapper(value, min = 0, max = 1) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (value < min || value > max) {\n      console.error(`MUI: The value provided ${value} is out of range [${min}, ${max}].`);\n    }\n  }\n  return clamp(value, min, max);\n}\n\n/**\n * Converts a color from CSS hex format to CSS rgb format.\n * @param {string} color - Hex color, i.e. #nnn or #nnnnnn\n * @returns {string} A CSS rgb color string\n */\nexport function hexToRgb(color) {\n  color = color.slice(1);\n  const re = new RegExp(`.{1,${color.length >= 6 ? 2 : 1}}`, 'g');\n  let colors = color.match(re);\n  if (colors && colors[0].length === 1) {\n    colors = colors.map(n => n + n);\n  }\n  return colors ? `rgb${colors.length === 4 ? 'a' : ''}(${colors.map((n, index) => {\n    return index < 3 ? parseInt(n, 16) : Math.round(parseInt(n, 16) / 255 * 1000) / 1000;\n  }).join(', ')})` : '';\n}\nfunction intToHex(int) {\n  const hex = int.toString(16);\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * Returns an object with the type and values of a color.\n *\n * Note: Does not support rgb % values.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {object} - A MUI color object: {type: string, values: number[]}\n */\nexport function decomposeColor(color) {\n  // Idempotent\n  if (color.type) {\n    return color;\n  }\n  if (color.charAt(0) === '#') {\n    return decomposeColor(hexToRgb(color));\n  }\n  const marker = color.indexOf('(');\n  const type = color.substring(0, marker);\n  if (['rgb', 'rgba', 'hsl', 'hsla', 'color'].indexOf(type) === -1) {\n    throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: Unsupported \\`${color}\\` color.\nThe following formats are supported: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color().` : _formatMuiErrorMessage(9, color));\n  }\n  let values = color.substring(marker + 1, color.length - 1);\n  let colorSpace;\n  if (type === 'color') {\n    values = values.split(' ');\n    colorSpace = values.shift();\n    if (values.length === 4 && values[3].charAt(0) === '/') {\n      values[3] = values[3].slice(1);\n    }\n    if (['srgb', 'display-p3', 'a98-rgb', 'prophoto-rgb', 'rec-2020'].indexOf(colorSpace) === -1) {\n      throw new Error(process.env.NODE_ENV !== \"production\" ? `MUI: unsupported \\`${colorSpace}\\` color space.\nThe following color spaces are supported: srgb, display-p3, a98-rgb, prophoto-rgb, rec-2020.` : _formatMuiErrorMessage(10, colorSpace));\n    }\n  } else {\n    values = values.split(',');\n  }\n  values = values.map(value => parseFloat(value));\n  return {\n    type,\n    values,\n    colorSpace\n  };\n}\n\n/**\n * Returns a channel created from the input color.\n *\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {string} - The channel for the color, that can be used in rgba or hsla colors\n */\nexport const colorChannel = color => {\n  const decomposedColor = decomposeColor(color);\n  return decomposedColor.values.slice(0, 3).map((val, idx) => decomposedColor.type.indexOf('hsl') !== -1 && idx !== 0 ? `${val}%` : val).join(' ');\n};\nexport const private_safeColorChannel = (color, warning) => {\n  try {\n    return colorChannel(color);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n};\n\n/**\n * Converts a color object with type and values to a string.\n * @param {object} color - Decomposed color\n * @param {string} color.type - One of: 'rgb', 'rgba', 'hsl', 'hsla', 'color'\n * @param {array} color.values - [n,n,n] or [n,n,n,n]\n * @returns {string} A CSS color string\n */\nexport function recomposeColor(color) {\n  const {\n    type,\n    colorSpace\n  } = color;\n  let {\n    values\n  } = color;\n  if (type.indexOf('rgb') !== -1) {\n    // Only convert the first 3 values to int (i.e. not alpha)\n    values = values.map((n, i) => i < 3 ? parseInt(n, 10) : n);\n  } else if (type.indexOf('hsl') !== -1) {\n    values[1] = `${values[1]}%`;\n    values[2] = `${values[2]}%`;\n  }\n  if (type.indexOf('color') !== -1) {\n    values = `${colorSpace} ${values.join(' ')}`;\n  } else {\n    values = `${values.join(', ')}`;\n  }\n  return `${type}(${values})`;\n}\n\n/**\n * Converts a color from CSS rgb format to CSS hex format.\n * @param {string} color - RGB color, i.e. rgb(n, n, n)\n * @returns {string} A CSS rgb color string, i.e. #nnnnnn\n */\nexport function rgbToHex(color) {\n  // Idempotent\n  if (color.indexOf('#') === 0) {\n    return color;\n  }\n  const {\n    values\n  } = decomposeColor(color);\n  return `#${values.map((n, i) => intToHex(i === 3 ? Math.round(255 * n) : n)).join('')}`;\n}\n\n/**\n * Converts a color from hsl format to rgb format.\n * @param {string} color - HSL color values\n * @returns {string} rgb color values\n */\nexport function hslToRgb(color) {\n  color = decomposeColor(color);\n  const {\n    values\n  } = color;\n  const h = values[0];\n  const s = values[1] / 100;\n  const l = values[2] / 100;\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  let type = 'rgb';\n  const rgb = [Math.round(f(0) * 255), Math.round(f(8) * 255), Math.round(f(4) * 255)];\n  if (color.type === 'hsla') {\n    type += 'a';\n    rgb.push(values[3]);\n  }\n  return recomposeColor({\n    type,\n    values: rgb\n  });\n}\n/**\n * The relative brightness of any point in a color space,\n * normalized to 0 for darkest black and 1 for lightest white.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @returns {number} The relative brightness of the color in the range 0 - 1\n */\nexport function getLuminance(color) {\n  color = decomposeColor(color);\n  let rgb = color.type === 'hsl' || color.type === 'hsla' ? decomposeColor(hslToRgb(color)).values : color.values;\n  rgb = rgb.map(val => {\n    if (color.type !== 'color') {\n      val /= 255; // normalized\n    }\n    return val <= 0.03928 ? val / 12.92 : ((val + 0.055) / 1.055) ** 2.4;\n  });\n\n  // Truncate at 3 digits\n  return Number((0.2126 * rgb[0] + 0.7152 * rgb[1] + 0.0722 * rgb[2]).toFixed(3));\n}\n\n/**\n * Calculates the contrast ratio between two colors.\n *\n * Formula: https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests\n * @param {string} foreground - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @param {string} background - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla()\n * @returns {number} A contrast ratio value in the range 0 - 21.\n */\nexport function getContrastRatio(foreground, background) {\n  const lumA = getLuminance(foreground);\n  const lumB = getLuminance(background);\n  return (Math.max(lumA, lumB) + 0.05) / (Math.min(lumA, lumB) + 0.05);\n}\n\n/**\n * Sets the absolute transparency of a color.\n * Any existing alpha values are overwritten.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} value - value to set the alpha channel to in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function alpha(color, value) {\n  color = decomposeColor(color);\n  value = clampWrapper(value);\n  if (color.type === 'rgb' || color.type === 'hsl') {\n    color.type += 'a';\n  }\n  if (color.type === 'color') {\n    color.values[3] = `/${value}`;\n  } else {\n    color.values[3] = value;\n  }\n  return recomposeColor(color);\n}\nexport function private_safeAlpha(color, value, warning) {\n  try {\n    return alpha(color, value);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darkens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function darken(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] *= 1 - coefficient;\n  } else if (color.type.indexOf('rgb') !== -1 || color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] *= 1 - coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeDarken(color, coefficient, warning) {\n  try {\n    return darken(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Lightens a color.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function lighten(color, coefficient) {\n  color = decomposeColor(color);\n  coefficient = clampWrapper(coefficient);\n  if (color.type.indexOf('hsl') !== -1) {\n    color.values[2] += (100 - color.values[2]) * coefficient;\n  } else if (color.type.indexOf('rgb') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (255 - color.values[i]) * coefficient;\n    }\n  } else if (color.type.indexOf('color') !== -1) {\n    for (let i = 0; i < 3; i += 1) {\n      color.values[i] += (1 - color.values[i]) * coefficient;\n    }\n  }\n  return recomposeColor(color);\n}\nexport function private_safeLighten(color, coefficient, warning) {\n  try {\n    return lighten(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Darken or lighten a color, depending on its luminance.\n * Light colors are darkened, dark colors are lightened.\n * @param {string} color - CSS color, i.e. one of: #nnn, #nnnnnn, rgb(), rgba(), hsl(), hsla(), color()\n * @param {number} coefficient=0.15 - multiplier in the range 0 - 1\n * @returns {string} A CSS color string. Hex input values are returned as rgb\n */\nexport function emphasize(color, coefficient = 0.15) {\n  return getLuminance(color) > 0.5 ? darken(color, coefficient) : lighten(color, coefficient);\n}\nexport function private_safeEmphasize(color, coefficient, warning) {\n  try {\n    return emphasize(color, coefficient);\n  } catch (error) {\n    if (warning && process.env.NODE_ENV !== 'production') {\n      console.warn(warning);\n    }\n    return color;\n  }\n}\n\n/**\n * Blend a transparent overlay color with a background color, resulting in a single\n * RGB color.\n * @param {string} background - CSS color\n * @param {string} overlay - CSS color\n * @param {number} opacity - Opacity multiplier in the range 0 - 1\n * @param {number} [gamma=1.0] - Gamma correction factor. For gamma-correct blending, 2.2 is usual.\n */\nexport function blend(background, overlay, opacity, gamma = 1.0) {\n  const blendChannel = (b, o) => Math.round((b ** (1 / gamma) * (1 - opacity) + o ** (1 / gamma) * opacity) ** gamma);\n  const backgroundColor = decomposeColor(background);\n  const overlayColor = decomposeColor(overlay);\n  const rgb = [blendChannel(backgroundColor.values[0], overlayColor.values[0]), blendChannel(backgroundColor.values[1], overlayColor.values[1]), blendChannel(backgroundColor.values[2], overlayColor.values[2])];\n  return recomposeColor({\n    type: 'rgb',\n    values: rgb\n  });\n}","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 2s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 2s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11.8 10.9c-2.27-.59-3-1.2-3-2.15 0-1.09 1.01-1.85 2.7-1.85 1.78 0 2.44.85 2.5 2.1h2.21c-.07-1.72-1.12-3.3-3.21-3.81V3h-3v2.16c-1.94.42-3.5 1.68-3.5 3.61 0 2.31 1.91 3.46 4.7 4.13 2.5.6 3 1.48 3 2.41 0 .69-.49 1.79-2.7 1.79-2.06 0-2.87-.92-2.98-2.1h-2.2c.12 2.19 1.76 3.42 3.68 3.83V21h3v-2.15c1.95-.37 3.5-1.5 3.5-3.55 0-2.84-2.43-3.81-4.7-4.4\"\n}), 'AttachMoney');","import React from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Chip,\r\n\r\n  Alert,\r\n  Skeleton,\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  Warning,\r\n  CheckCircle,\r\n  Error,\r\n  Build,\r\n  AttachMoney,\r\n} from '@mui/icons-material';\r\nimport { useDashboardSummary } from '../hooks/useProduction';\r\n\r\nimport { formatCurrency, formatPercent, formatDateTime } from '../utils/format';\r\n\r\n\r\ninterface KPIItem {\r\n  label: string;\r\n  value: number | string;\r\n  color: 'success' | 'warning' | 'error' | 'info';\r\n  icon: React.ReactNode;\r\n}\r\n\r\ninterface KPICard {\r\n  title: string;\r\n  icon?: React.ReactNode;\r\n  color: 'success' | 'warning' | 'error' | 'info';\r\n  value?: string | number;\r\n  subtitle?: string;\r\n  items?: KPIItem[];\r\n}\r\n\r\nconst Dashboard: React.FC = () => {\r\n  const { data: summary, isLoading, error, dataUpdatedAt } = useDashboardSummary();\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Dashboard\r\n        </Typography>\r\n        <Grid container spacing={3} sx={{ mt: 2 }}>\r\n          {[1, 2, 3, 4].map((i) => (\r\n            <Grid item xs={12} sm={6} md={3} key={i}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Skeleton variant=\"text\" width=\"60%\" />\r\n                  <Skeleton variant=\"text\" height={40} width=\"80%\" />\r\n                  <Skeleton variant=\"text\" width=\"40%\" />\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Dashboard\r\n        </Typography>\r\n        <Alert severity=\"error\">\r\n          Failed to load dashboard data. Please try refreshing the page.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!summary) return null;\r\n\r\n  const kpiCards: KPICard[] = [\r\n    {\r\n      title: 'Equipment Status',\r\n      items: [\r\n        {\r\n          label: 'Operational',\r\n          value: summary.operational_equipment,\r\n          color: 'success',\r\n          icon: <CheckCircle />,\r\n        },\r\n        {\r\n          label: 'Warning',\r\n          value: summary.warning_equipment,\r\n          color: 'warning',\r\n          icon: <Warning />,\r\n        },\r\n        {\r\n          label: 'Critical',\r\n          value: summary.critical_equipment,\r\n          color: 'error',\r\n          icon: <Error />,\r\n        },\r\n        {\r\n          label: 'Maintenance',\r\n          value: summary.maintenance_equipment,\r\n          color: 'info',\r\n          icon: <Build />,\r\n        },\r\n      ],\r\n      color: 'success',\r\n    },\r\n    {\r\n      title: 'Production Efficiency',\r\n      value: formatPercent(summary.production_efficiency),\r\n      icon: <TrendingUp />,\r\n      color: summary.production_efficiency >= 90 ? 'success' : 'warning',\r\n      subtitle: summary.production_efficiency >= 90 ? 'Above target threshold' : 'Below target',\r\n    },\r\n    {\r\n      title: 'Active Alerts',\r\n      value: summary.active_alerts,\r\n      icon: <Warning />,\r\n      color: summary.active_alerts > 0 ? 'warning' : 'success',\r\n      subtitle: summary.active_alerts > 0 ? 'Requiring attention' : 'All clear',\r\n    },\r\n    {\r\n      title: 'Cost Savings',\r\n      value: formatCurrency(summary.cost_savings),\r\n      icon: <AttachMoney />,\r\n      color: 'success',\r\n      subtitle: 'This month',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Dashboard\r\n      </Typography>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\">\r\n          Real-time overview of your manufacturing operations\r\n        </Typography>\r\n        <Typography variant=\"caption\" color=\"text.secondary\">\r\n          Last updated: {formatDateTime(new Date(dataUpdatedAt))}\r\n        </Typography>\r\n      </Box>\r\n\r\n      <Grid container spacing={3} sx={{ mt: 2 }}>\r\n        {kpiCards.map((card, index) => (\r\n          <Grid item xs={12} sm={6} md={3} key={index}>\r\n            <Card sx={{ height: '100%', position: 'relative' }}>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" mb={2}>\r\n                  {card.icon && (\r\n                    <Box\r\n                      sx={{\r\n                        mr: 2,\r\n                        color: `${card.color}.main`,\r\n                      }}\r\n                    >\r\n                      {card.icon}\r\n                    </Box>\r\n                  )}\r\n                  <Typography variant=\"h6\" component=\"div\">\r\n                    {card.title}\r\n                  </Typography>\r\n                </Box>\r\n\r\n                {card.items ? (\r\n                  <Box>\r\n                    {card.items.map((item, itemIndex) => (\r\n                      <Box\r\n                        key={itemIndex}\r\n                        display=\"flex\"\r\n                        justifyContent=\"space-between\"\r\n                        alignItems=\"center\"\r\n                        mb={1}\r\n                      >\r\n                        <Box display=\"flex\" alignItems=\"center\">\r\n                          <Box\r\n                            sx={{\r\n                              mr: 1,\r\n                              color: `${item.color}.main`,\r\n                              fontSize: '1rem',\r\n                            }}\r\n                          >\r\n                            {item.icon}\r\n                          </Box>\r\n                          <Typography variant=\"body2\">{item.label}</Typography>\r\n                        </Box>\r\n                        <Chip\r\n                          label={item.value}\r\n                          color={item.color}\r\n                          size=\"small\"\r\n                        />\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                ) : (\r\n                  <Box>\r\n                    <Typography variant=\"h4\" color={`${card.color}.main`}>\r\n                      {card.value}\r\n                    </Typography>\r\n                    {card.subtitle && (\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {card.subtitle}\r\n                      </Typography>\r\n                    )}\r\n                  </Box>\r\n                )}\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      <Grid container spacing={3} sx={{ mt: 3 }}>\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Recent Activity\r\n              </Typography>\r\n              <Box>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  • Equipment health check completed for CNC Machine #2\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  • Maintenance alert generated for Robotic Arm #3\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  • Production efficiency target achieved for Floor A\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\r\n                  • Sensor calibration scheduled for next week\r\n                </Typography>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} md={6}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                System Status\r\n              </Typography>\r\n              <Box>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\r\n                  <Typography variant=\"body2\">API Status</Typography>\r\n                  <Chip label=\"Online\" color=\"success\" size=\"small\" />\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\r\n                  <Typography variant=\"body2\">Database</Typography>\r\n                  <Chip label=\"Connected\" color=\"success\" size=\"small\" />\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" mb={1}>\r\n                  <Typography variant=\"body2\">Sensor Network</Typography>\r\n                  <Chip label=\"Active\" color=\"success\" size=\"small\" />\r\n                </Box>\r\n                <Box display=\"flex\" justifyContent=\"space-between\">\r\n                  <Typography variant=\"body2\">Last Sync</Typography>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {formatDateTime(new Date(dataUpdatedAt))}\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;","import { useQuery } from '@tanstack/react-query';\r\nimport { productionAPI, maintenanceAPI } from '../services/api';\r\n\r\nexport const useProductionMetrics = () => {\r\n  return useQuery({\r\n    queryKey: ['productionMetrics'],\r\n    queryFn: productionAPI.getProductionMetrics,\r\n    staleTime: 60000, // 1 minute\r\n  });\r\n};\r\n\r\nexport const useDashboardSummary = () => {\r\n  return useQuery({\r\n    queryKey: ['dashboardSummary'],\r\n    queryFn: productionAPI.getDashboardSummary,\r\n    staleTime: 30000, // 30 seconds\r\n    refetchInterval: 30000, // Auto-refresh every 30 seconds\r\n  });\r\n};\r\n\r\nexport const useProductionRecords = (params?: {\r\n  equipment_id?: number;\r\n  shift?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['productionRecords', params],\r\n    queryFn: () => productionAPI.getProductionRecords(params),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceAlerts = (priority?: string) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceAlerts', priority],\r\n    queryFn: () => maintenanceAPI.getMaintenanceAlerts({ priority }),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceLogs = (params?: {\r\n  equipment_id?: number;\r\n  status?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceLogs', params],\r\n    queryFn: () => maintenanceAPI.getMaintenanceLogs(params),\r\n    staleTime: 60000,\r\n  });\r\n};"],"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatNumber","num","decimals","arguments","length","undefined","minimumFractionDigits","maximumFractionDigits","formatPercent","value","formatDateTime","date","d","Date","DateTimeFormat","year","month","day","hour","minute","createSvgIcon","_jsx","getUnit","input","String","match","toUnitless","parseFloat","clampWrapper","min","max","clamp","decomposeColor","color","type","charAt","slice","re","RegExp","colors","map","n","index","parseInt","Math","round","join","hexToRgb","marker","indexOf","substring","Error","_formatMuiErrorMessage","colorSpace","values","split","shift","recomposeColor","i","alpha","getSkeletonUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","_t","_t2","_t3","_t4","_","t","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","styled","name","overridesResolver","props","styles","ownerState","root","variant","animation","hasChildren","withChildren","width","fitContent","height","heightAuto","_ref","theme","radiusUnit","shape","borderRadius","radiusValue","_extends","display","backgroundColor","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","content","visibility","maxWidth","_ref2","css","_ref3","action","hover","React","inProps","ref","useDefaultProps","className","component","other","_objectWithoutPropertiesLoose","Boolean","children","classes","slots","composeClasses","useUtilityClasses","as","clsx","Dashboard","data","summary","isLoading","error","dataUpdatedAt","useDashboardSummary","_jsxs","Box","Typography","gutterBottom","Grid","container","spacing","sx","mt","item","xs","sm","md","Card","CardContent","Alert","severity","kpiCards","title","items","label","operational_equipment","icon","CheckCircle","warning_equipment","Warning","critical_equipment","maintenance_equipment","Build","production_efficiency","TrendingUp","subtitle","active_alerts","cost_savings","AttachMoney","justifyContent","alignItems","mb","card","position","mr","itemIndex","fontSize","Chip","size","useProductionMetrics","useQuery","queryKey","queryFn","productionAPI","getProductionMetrics","staleTime","getDashboardSummary","refetchInterval"],"sourceRoot":""}