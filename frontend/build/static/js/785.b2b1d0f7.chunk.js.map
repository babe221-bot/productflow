{"version":3,"file":"static/js/785.b2b1d0f7.chunk.js","mappings":"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","sources":["utils/format.ts","components/AnimatedCard.tsx","components/GlowingButton.tsx","constants/index.ts","pages/Equipment.tsx","hooks/useEquipment.ts"],"sourcesContent":["// Utility functions for formatting data\r\n\r\nexport const formatCurrency = (amount: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(amount);\r\n};\r\n\r\nexport const formatNumber = (num: number, decimals: number = 0): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  }).format(num);\r\n};\r\n\r\nexport const formatPercent = (value: number, decimals: number = 1): string => {\r\n  return `${formatNumber(value, decimals)}%`;\r\n};\r\n\r\nexport const formatDate = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatDateTime = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatRelativeTime = (date: string | Date): string => {\r\n  const now = new Date();\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\r\n  return `${Math.floor(diffInSeconds / 86400)}d ago`;\r\n};","import React, { useEffect, useRef } from 'react';\r\nimport { Card, CardProps } from '@mui/material';\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\ninterface AnimatedCardProps extends CardProps {\r\n  animationType?: 'fadeInUp' | 'scaleIn' | 'slideInLeft' | 'slideInRight';\r\n  delay?: number;\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AnimatedCard: React.FC<AnimatedCardProps> = ({\r\n  animationType = 'fadeInUp',\r\n  delay = 0,\r\n  children,\r\n  sx,\r\n  ...props\r\n}) => {\r\n  const cardRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!cardRef.current) return;\r\n\r\n    const card = cardRef.current;\r\n    \r\n    // Set initial state\r\n    anime.set(card, {\r\n      opacity: 0,\r\n      translateY: animationType.includes('Up') ? 30 : 0,\r\n      translateX: animationType.includes('Left') ? -30 : animationType.includes('Right') ? 30 : 0,\r\n      scale: animationType === 'scaleIn' ? 0.8 : 1,\r\n    });\r\n\r\n    // Animate in\r\n    anime({\r\n      targets: card,\r\n      opacity: 1,\r\n      translateY: 0,\r\n      translateX: 0,\r\n      scale: 1,\r\n      duration: 800,\r\n      easing: 'easeOutCubic',\r\n      delay,\r\n    });\r\n\r\n    // Add hover animation\r\n    const handleMouseEnter = () => {\r\n      anime({\r\n        targets: card,\r\n        scale: 1.02,\r\n        translateY: -4,\r\n        duration: 300,\r\n        easing: 'easeOutCubic',\r\n      });\r\n    };\r\n\r\n    const handleMouseLeave = () => {\r\n      anime({\r\n        targets: card,\r\n        scale: 1,\r\n        translateY: 0,\r\n        duration: 300,\r\n        easing: 'easeOutCubic',\r\n      });\r\n    };\r\n\r\n    card.addEventListener('mouseenter', handleMouseEnter);\r\n    card.addEventListener('mouseleave', handleMouseLeave);\r\n\r\n    return () => {\r\n      card.removeEventListener('mouseenter', handleMouseEnter);\r\n      card.removeEventListener('mouseleave', handleMouseLeave);\r\n    };\r\n  }, [animationType, delay]);\r\n\r\n  return (\r\n    <Card\r\n      ref={cardRef}\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'visible',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          right: 0,\r\n          bottom: 0,\r\n          borderRadius: 'inherit',\r\n          background: 'linear-gradient(45deg, rgba(100, 181, 246, 0.1), rgba(156, 39, 176, 0.1))',\r\n          opacity: 0,\r\n          transition: 'opacity 0.3s ease',\r\n          zIndex: -1,\r\n        },\r\n        '&:hover::before': {\r\n          opacity: 1,\r\n        },\r\n        ...sx,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AnimatedCard;","import React, { useEffect, useRef } from 'react';\r\nimport { Button, ButtonProps } from '@mui/material';\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\ninterface GlowingButtonProps extends ButtonProps {\r\n  glowColor?: string;\r\n  pulseAnimation?: boolean;\r\n}\r\n\r\nconst GlowingButton: React.FC<GlowingButtonProps> = ({\r\n  glowColor = '#64b5f6',\r\n  pulseAnimation = false,\r\n  children,\r\n  sx,\r\n  ...props\r\n}) => {\r\n  const buttonRef = useRef<HTMLButtonElement>(null);\r\n\r\n  useEffect(() => {\r\n    if (!buttonRef.current || !pulseAnimation) return;\r\n\r\n    const button = buttonRef.current;\r\n    \r\n    const pulseAnim = anime({\r\n      targets: button,\r\n      scale: [1, 1.05, 1],\r\n      boxShadow: [\r\n        `0 4px 15px ${glowColor}40`,\r\n        `0 8px 25px ${glowColor}60`,\r\n        `0 4px 15px ${glowColor}40`,\r\n      ],\r\n      duration: 2000,\r\n      loop: true,\r\n      easing: 'easeInOutSine',\r\n    });\r\n\r\n    return () => {\r\n      pulseAnim.pause();\r\n    };\r\n  }, [glowColor, pulseAnimation]);\r\n\r\n  return (\r\n    <Button\r\n      ref={buttonRef}\r\n      sx={{\r\n        position: 'relative',\r\n        overflow: 'hidden',\r\n        background: `linear-gradient(45deg, ${glowColor}20, ${glowColor}40)`,\r\n        border: `1px solid ${glowColor}60`,\r\n        backdropFilter: 'blur(10px)',\r\n        color: '#ffffff',\r\n        fontWeight: 600,\r\n        textTransform: 'none',\r\n        borderRadius: 2,\r\n        transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n        '&::before': {\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: '-100%',\r\n          width: '100%',\r\n          height: '100%',\r\n          background: `linear-gradient(90deg, transparent, ${glowColor}30, transparent)`,\r\n          transition: 'left 0.5s ease',\r\n        },\r\n        '&:hover': {\r\n          background: `linear-gradient(45deg, ${glowColor}30, ${glowColor}50)`,\r\n          boxShadow: `0 8px 25px ${glowColor}40`,\r\n          transform: 'translateY(-2px)',\r\n          '&::before': {\r\n            left: '100%',\r\n          },\r\n        },\r\n        '&:active': {\r\n          transform: 'translateY(0px)',\r\n        },\r\n        ...sx,\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default GlowingButton;","// Application constants\r\n\r\nexport const EQUIPMENT_STATUS = {\r\n  OPERATIONAL: 'operational',\r\n  WARNING: 'warning',\r\n  CRITICAL: 'critical',\r\n  MAINTENANCE: 'maintenance',\r\n} as const;\r\n\r\nexport const EQUIPMENT_STATUS_COLORS = {\r\n  [EQUIPMENT_STATUS.OPERATIONAL]: '#4caf50',\r\n  [EQUIPMENT_STATUS.WARNING]: '#ff9800',\r\n  [EQUIPMENT_STATUS.CRITICAL]: '#f44336',\r\n  [EQUIPMENT_STATUS.MAINTENANCE]: '#9e9e9e',\r\n} as const;\r\n\r\nexport const SENSOR_TYPES = {\r\n  TEMPERATURE: 'temperature',\r\n  PRESSURE: 'pressure',\r\n  VIBRATION: 'vibration',\r\n  SPEED: 'speed',\r\n} as const;\r\n\r\nexport const MAINTENANCE_PRIORITIES = {\r\n  LOW: 'low',\r\n  MEDIUM: 'medium',\r\n  HIGH: 'high',\r\n  CRITICAL: 'critical',\r\n} as const;\r\n\r\nexport const PRIORITY_COLORS = {\r\n  [MAINTENANCE_PRIORITIES.LOW]: '#4caf50',\r\n  [MAINTENANCE_PRIORITIES.MEDIUM]: '#2196f3',\r\n  [MAINTENANCE_PRIORITIES.HIGH]: '#ff9800',\r\n  [MAINTENANCE_PRIORITIES.CRITICAL]: '#f44336',\r\n} as const;\r\n\r\nexport const USER_ROLES = {\r\n  ADMIN: 'admin',\r\n  MANAGER: 'manager',\r\n  TECHNICIAN: 'technician',\r\n  OPERATOR: 'operator',\r\n} as const;\r\n\r\nexport const SHIFTS = {\r\n  MORNING: 'morning',\r\n  AFTERNOON: 'afternoon',\r\n  NIGHT: 'night',\r\n} as const;\r\n\r\nexport const MAINTENANCE_TYPES = {\r\n  PREVENTIVE: 'preventive',\r\n  CORRECTIVE: 'corrective',\r\n  EMERGENCY: 'emergency',\r\n} as const;\r\n\r\nexport const API_ENDPOINTS = {\r\n  AUTH: {\r\n    LOGIN: '/token',\r\n    ME: '/users/me',\r\n  },\r\n  EQUIPMENT: '/equipment',\r\n  SENSORS: (equipmentId: number) => `/equipment/${equipmentId}/sensors`,\r\n  MAINTENANCE: '/maintenance',\r\n  MAINTENANCE_LOGS: '/maintenance/logs',\r\n  PRODUCTION_METRICS: '/production/metrics',\r\n  DASHBOARD_SUMMARY: '/dashboard/summary',\r\n  PRODUCTION_RECORDS: '/production/records',\r\n} as const;\r\n\r\nexport const QUERY_KEYS = {\r\n  EQUIPMENT: 'equipment',\r\n  SENSOR_DATA: 'sensorData',\r\n  MAINTENANCE_ALERTS: 'maintenanceAlerts',\r\n  MAINTENANCE_LOGS: 'maintenanceLogs',\r\n  PRODUCTION_METRICS: 'productionMetrics',\r\n  DASHBOARD_SUMMARY: 'dashboardSummary',\r\n  PRODUCTION_RECORDS: 'productionRecords',\r\n} as const;","import React, { useState, useEffect, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Grid,\r\n  Typography,\r\n  Chip,\r\n  Button,\r\n  TextField,\r\n  InputAdornment,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@mui/material';\r\nimport {\r\n  Add,\r\n  Search,\r\n  Refresh,\r\n  Engineering,\r\n  Speed,\r\n  Thermostat,\r\n  Warning,\r\n  CheckCircle,\r\n  Error,\r\n  Build,\r\n} from '@mui/icons-material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useEquipment, useCreateEquipment } from '../hooks/useEquipment';\r\nimport { Equipment as EquipmentType, EquipmentCreateData } from '../types';\r\nimport { formatDateTime } from '../utils/format';\r\nimport { EQUIPMENT_STATUS } from '../constants';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\nimport AnimatedCard from '../components/AnimatedCard';\r\nimport GlowingButton from '../components/GlowingButton';\r\n\r\n// @ts-ignore\r\nconst anime = require('animejs');\r\n\r\nconst Equipment: React.FC = () => {\r\n  const [statusFilter, setStatusFilter] = useState<string>('');\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState<boolean>(false);\r\n  const [newEquipment, setNewEquipment] = useState<EquipmentCreateData>({\r\n    name: '',\r\n    type: '',\r\n    location: '',\r\n    status: EQUIPMENT_STATUS.OPERATIONAL,\r\n  });\r\n  \r\n  const navigate = useNavigate();\r\n  const titleRef = useRef<HTMLElement>(null);\r\n  const searchRef = useRef<HTMLDivElement>(null);\r\n  \r\n  const { \r\n    data: equipment = [], \r\n    isLoading, \r\n    error, \r\n    refetch \r\n  } = useEquipment(statusFilter || undefined);\r\n  \r\n  const createEquipmentMutation = useCreateEquipment();\r\n\r\n  useEffect(() => {\r\n    // Animate page title\r\n    if (titleRef.current) {\r\n      anime({\r\n        targets: titleRef.current,\r\n        translateY: [-30, 0],\r\n        opacity: [0, 1],\r\n        scale: [0.9, 1],\r\n        duration: 800,\r\n        easing: 'easeOutBack',\r\n      });\r\n    }\r\n\r\n    // Animate search bar\r\n    if (searchRef.current) {\r\n      anime({\r\n        targets: searchRef.current,\r\n        translateY: [20, 0],\r\n        opacity: [0, 1],\r\n        duration: 600,\r\n        delay: 200,\r\n        easing: 'easeOutCubic',\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case EQUIPMENT_STATUS.OPERATIONAL:\r\n        return 'success';\r\n      case EQUIPMENT_STATUS.WARNING:\r\n        return 'warning';\r\n      case EQUIPMENT_STATUS.CRITICAL:\r\n        return 'error';\r\n      case EQUIPMENT_STATUS.MAINTENANCE:\r\n        return 'info';\r\n      default:\r\n        return 'default';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case EQUIPMENT_STATUS.OPERATIONAL:\r\n        return <CheckCircle />;\r\n      case EQUIPMENT_STATUS.WARNING:\r\n        return <Warning />;\r\n      case EQUIPMENT_STATUS.CRITICAL:\r\n        return <Error />;\r\n      case EQUIPMENT_STATUS.MAINTENANCE:\r\n        return <Build />;\r\n      default:\r\n        return <Engineering />;\r\n    }\r\n  };\r\n\r\n  const filteredEquipment = equipment.filter((item: EquipmentType) => {\r\n    const matchesSearch = item.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         item.type.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         item.location.toLowerCase().includes(searchTerm.toLowerCase());\r\n    const matchesStatus = !statusFilter || item.status === statusFilter;\r\n    return matchesSearch && matchesStatus;\r\n  });\r\n\r\n  const handleCreateEquipment = async () => {\r\n    try {\r\n      await createEquipmentMutation.mutateAsync(newEquipment);\r\n      setIsCreateDialogOpen(false);\r\n      setNewEquipment({\r\n        name: '',\r\n        type: '',\r\n        location: '',\r\n        status: EQUIPMENT_STATUS.OPERATIONAL,\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to create equipment:', error);\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner message=\"Loading equipment...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box sx={{ p: 3 }}>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Equipment\r\n        </Typography>\r\n        <Typography color=\"error\">\r\n          Failed to load equipment. Please try again.\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3, position: 'relative' }}>\r\n      {/* Page Header */}\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={4}>\r\n        <Typography \r\n          ref={titleRef}\r\n          variant=\"h2\" \r\n          sx={{\r\n            background: 'linear-gradient(45deg, #64b5f6, #ab47bc)',\r\n            WebkitBackgroundClip: 'text',\r\n            WebkitTextFillColor: 'transparent',\r\n            backgroundClip: 'text',\r\n            fontWeight: 700,\r\n            textShadow: '0 4px 8px rgba(0,0,0,0.3)',\r\n          }}\r\n        >\r\n          Equipment Management\r\n        </Typography>\r\n        \r\n        <GlowingButton\r\n          variant=\"contained\"\r\n          startIcon={<Add />}\r\n          onClick={() => setIsCreateDialogOpen(true)}\r\n          pulseAnimation\r\n          glowColor=\"#00e676\"\r\n          sx={{\r\n            background: 'linear-gradient(45deg, #00e676, #64b5f6)',\r\n            '&:hover': {\r\n              background: 'linear-gradient(45deg, #00c853, #42a5f5)',\r\n            },\r\n          }}\r\n        >\r\n          Add Equipment\r\n        </GlowingButton>\r\n      </Box>\r\n\r\n      {/* Filters */}\r\n      <AnimatedCard animationType=\"fadeInUp\" sx={{ mb: 3 }} ref={searchRef}>\r\n        <Box sx={{ p: 3 }}>\r\n          <Grid container spacing={3} alignItems=\"center\">\r\n            <Grid item xs={12} md={6}>\r\n              <TextField\r\n                fullWidth\r\n                placeholder=\"Search equipment by name, type, or location...\"\r\n                value={searchTerm}\r\n                onChange={(e) => setSearchTerm(e.target.value)}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Search sx={{ color: 'primary.main' }} />\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                sx={{\r\n                  '& .MuiOutlinedInput-root': {\r\n                    background: 'rgba(100, 181, 246, 0.05)',\r\n                    '&:hover': {\r\n                      background: 'rgba(100, 181, 246, 0.1)',\r\n                    },\r\n                    '&.Mui-focused': {\r\n                      background: 'rgba(100, 181, 246, 0.1)',\r\n                      boxShadow: '0 0 20px rgba(100, 181, 246, 0.3)',\r\n                    },\r\n                  },\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <FormControl fullWidth>\r\n                <InputLabel sx={{ color: 'text.secondary' }}>Status Filter</InputLabel>\r\n                <Select\r\n                  value={statusFilter}\r\n                  onChange={(e) => setStatusFilter(e.target.value)}\r\n                  label=\"Status Filter\"\r\n                  sx={{\r\n                    background: 'rgba(100, 181, 246, 0.05)',\r\n                    '&:hover': {\r\n                      background: 'rgba(100, 181, 246, 0.1)',\r\n                    },\r\n                  }}\r\n                >\r\n                  <MenuItem value=\"\">All Status</MenuItem>\r\n                  <MenuItem value={EQUIPMENT_STATUS.OPERATIONAL}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <CheckCircle sx={{ mr: 1, color: 'success.main', fontSize: 18 }} />\r\n                      Operational\r\n                    </Box>\r\n                  </MenuItem>\r\n                  <MenuItem value={EQUIPMENT_STATUS.WARNING}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Warning sx={{ mr: 1, color: 'warning.main', fontSize: 18 }} />\r\n                      Warning\r\n                    </Box>\r\n                  </MenuItem>\r\n                  <MenuItem value={EQUIPMENT_STATUS.CRITICAL}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Error sx={{ mr: 1, color: 'error.main', fontSize: 18 }} />\r\n                      Critical\r\n                    </Box>\r\n                  </MenuItem>\r\n                  <MenuItem value={EQUIPMENT_STATUS.MAINTENANCE}>\r\n                    <Box display=\"flex\" alignItems=\"center\">\r\n                      <Build sx={{ mr: 1, color: 'info.main', fontSize: 18 }} />\r\n                      Maintenance\r\n                    </Box>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} md={3}>\r\n              <Button\r\n                fullWidth\r\n                variant=\"outlined\"\r\n                startIcon={<Refresh />}\r\n                onClick={() => refetch()}\r\n                disabled={isLoading}\r\n                sx={{\r\n                  height: 56,\r\n                  borderColor: 'primary.main',\r\n                  color: 'primary.main',\r\n                  '&:hover': {\r\n                    borderColor: 'primary.light',\r\n                    background: 'rgba(100, 181, 246, 0.1)',\r\n                    transform: 'translateY(-2px)',\r\n                    boxShadow: '0 4px 20px rgba(100, 181, 246, 0.3)',\r\n                  },\r\n                  transition: 'all 0.3s cubic-bezier(0.4, 0, 0.2, 1)',\r\n                }}\r\n              >\r\n                Refresh\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </AnimatedCard>\r\n\r\n      {/* Equipment Grid */}\r\n      <Grid container spacing={3}>\r\n        {filteredEquipment.map((item: EquipmentType, index: number) => (\r\n          <Grid item xs={12} sm={6} lg={4} key={item.id}>\r\n            <AnimatedCard \r\n              animationType={index % 3 === 0 ? 'fadeInUp' : index % 3 === 1 ? 'scaleIn' : 'slideInLeft'}\r\n              delay={index * 100}\r\n              onClick={() => navigate(`/equipment/${item.id}`)}\r\n              sx={{\r\n                height: '100%',\r\n                cursor: 'pointer',\r\n                position: 'relative',\r\n                overflow: 'visible',\r\n                background: 'rgba(10, 25, 41, 0.6)',\r\n                '&::before': {\r\n                  content: '\"\"',\r\n                  position: 'absolute',\r\n                  top: 0,\r\n                  left: 0,\r\n                  right: 0,\r\n                  height: '4px',\r\n                  background: getStatusColor(item.status) === 'success' ? \r\n                    'linear-gradient(45deg, #00e676, #4caf50)' :\r\n                    getStatusColor(item.status) === 'warning' ?\r\n                    'linear-gradient(45deg, #ff9800, #ffc107)' :\r\n                    getStatusColor(item.status) === 'error' ?\r\n                    'linear-gradient(45deg, #f44336, #ff1744)' :\r\n                    'linear-gradient(45deg, #2196f3, #03a9f4)',\r\n                  borderRadius: '16px 16px 0 0',\r\n                },\r\n              }}\r\n            >\r\n              <Box sx={{ p: 3 }}>\r\n                <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"flex-start\" mb={2}>\r\n                  <Box display=\"flex\" alignItems=\"center\" flex={1}>\r\n                    <Box\r\n                      sx={{\r\n                        mr: 2,\r\n                        p: 1.5,\r\n                        borderRadius: '50%',\r\n                        background: `${getStatusColor(item.status) === 'success' ? 'rgba(0, 230, 118, 0.2)' : \r\n                                      getStatusColor(item.status) === 'warning' ? 'rgba(255, 152, 0, 0.2)' : \r\n                                      getStatusColor(item.status) === 'error' ? 'rgba(244, 67, 54, 0.2)' : 'rgba(33, 150, 243, 0.2)'}`,\r\n                        color: `${getStatusColor(item.status)}.main`,\r\n                        border: `2px solid ${getStatusColor(item.status) === 'success' ? '#00e676' : \r\n                                              getStatusColor(item.status) === 'warning' ? '#ff9800' : \r\n                                              getStatusColor(item.status) === 'error' ? '#f44336' : '#2196f3'}40`,\r\n                      }}\r\n                    >\r\n                      {getStatusIcon(item.status)}\r\n                    </Box>\r\n                    <Typography \r\n                      variant=\"h6\" \r\n                      sx={{ \r\n                        color: 'text.primary',\r\n                        fontWeight: 600,\r\n                        textShadow: '0 2px 4px rgba(0,0,0,0.3)',\r\n                      }}\r\n                    >\r\n                      {item.name}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Chip\r\n                    label={item.status}\r\n                    color={getStatusColor(item.status) as any}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      fontWeight: 600,\r\n                      textTransform: 'uppercase',\r\n                      fontSize: '0.75rem',\r\n                      backdropFilter: 'blur(10px)',\r\n                    }}\r\n                  />\r\n                </Box>\r\n                \r\n                <Box \r\n                  sx={{\r\n                    p: 2,\r\n                    borderRadius: 2,\r\n                    background: 'rgba(255, 255, 255, 0.03)',\r\n                    border: '1px solid rgba(255, 255, 255, 0.1)',\r\n                    mb: 2,\r\n                  }}\r\n                >\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary', mb: 1 }}>\r\n                    <strong>Type:</strong> {item.type}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>\r\n                    <strong>Location:</strong> {item.location}\r\n                  </Typography>\r\n                </Box>\r\n                \r\n                {item.last_maintenance && (\r\n                  <Typography \r\n                    variant=\"caption\" \r\n                    sx={{ \r\n                      color: 'text.secondary',\r\n                      display: 'block',\r\n                      mb: 2,\r\n                      opacity: 0.8,\r\n                    }}\r\n                  >\r\n                    Last maintenance: {formatDateTime(item.last_maintenance)}\r\n                  </Typography>\r\n                )}\r\n                \r\n                {/* Latest sensor readings */}\r\n                {item.latest_sensor_data && (\r\n                  <Box>\r\n                    <Typography \r\n                      variant=\"caption\" \r\n                      sx={{ \r\n                        color: 'primary.light', \r\n                        display: 'block',\r\n                        mb: 1,\r\n                        fontWeight: 600,\r\n                      }}\r\n                    >\r\n                      Latest Sensor Data:\r\n                    </Typography>\r\n                    <Box display=\"flex\" gap={1} flexWrap=\"wrap\">\r\n                      {item.latest_sensor_data.temperature && (\r\n                        <Chip\r\n                          icon={<Thermostat />}\r\n                          label={`${item.latest_sensor_data.temperature}°C`}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          sx={{\r\n                            borderColor: 'rgba(255, 87, 34, 0.5)',\r\n                            color: '#ff5722',\r\n                            background: 'rgba(255, 87, 34, 0.1)',\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {item.latest_sensor_data.speed && (\r\n                        <Chip\r\n                          icon={<Speed />}\r\n                          label={`${item.latest_sensor_data.speed} RPM`}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          sx={{\r\n                            borderColor: 'rgba(33, 150, 243, 0.5)',\r\n                            color: '#2196f3',\r\n                            background: 'rgba(33, 150, 243, 0.1)',\r\n                          }}\r\n                        />\r\n                      )}\r\n                      {item.latest_sensor_data.pressure && (\r\n                        <Chip\r\n                          icon={<Engineering />}\r\n                          label={`${item.latest_sensor_data.pressure} PSI`}\r\n                          size=\"small\"\r\n                          variant=\"outlined\"\r\n                          sx={{\r\n                            borderColor: 'rgba(156, 39, 176, 0.5)',\r\n                            color: '#9c27b0',\r\n                            background: 'rgba(156, 39, 176, 0.1)',\r\n                          }}\r\n                        />\r\n                      )}\r\n                    </Box>\r\n                  </Box>\r\n                )}\r\n              </Box>\r\n            </AnimatedCard>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Empty State */}\r\n      {filteredEquipment.length === 0 && (\r\n        <Box textAlign=\"center\" py={8}>\r\n          <AnimatedCard animationType=\"scaleIn\" delay={300}>\r\n            <Box sx={{ p: 6 }}>\r\n              <Engineering \r\n                sx={{ \r\n                  fontSize: 80, \r\n                  color: 'primary.main', \r\n                  mb: 3,\r\n                  opacity: 0.7,\r\n                }} \r\n              />\r\n              <Typography variant=\"h5\" sx={{ color: 'text.primary', mb: 2 }}>\r\n                No Equipment Found\r\n              </Typography>\r\n              <Typography variant=\"body1\" sx={{ color: 'text.secondary', mb: 3 }}>\r\n                {searchTerm || statusFilter \r\n                  ? 'Try adjusting your search or filter criteria'\r\n                  : 'Add your first equipment to get started with monitoring'}\r\n              </Typography>\r\n              <GlowingButton\r\n                variant=\"outlined\"\r\n                startIcon={<Add />}\r\n                onClick={() => setIsCreateDialogOpen(true)}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                Add Equipment\r\n              </GlowingButton>\r\n            </Box>\r\n          </AnimatedCard>\r\n        </Box>\r\n      )}\r\n\r\n      {/* Create Equipment Dialog */}\r\n      <Dialog \r\n        open={isCreateDialogOpen} \r\n        onClose={() => setIsCreateDialogOpen(false)}\r\n        maxWidth=\"sm\"\r\n        fullWidth\r\n        PaperProps={{\r\n          sx: {\r\n            background: 'rgba(10, 25, 41, 0.9)',\r\n            backdropFilter: 'blur(20px)',\r\n            border: '1px solid rgba(100, 181, 246, 0.3)',\r\n          }\r\n        }}\r\n      >\r\n        <DialogTitle sx={{ color: 'text.primary', fontWeight: 600 }}>\r\n          Add New Equipment\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <Box component=\"form\" sx={{ pt: 2 }}>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Equipment Name\"\r\n              value={newEquipment.name}\r\n              onChange={(e) => setNewEquipment(prev => ({ ...prev, name: e.target.value }))}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  background: 'rgba(100, 181, 246, 0.05)',\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Equipment Type\"\r\n              value={newEquipment.type}\r\n              onChange={(e) => setNewEquipment(prev => ({ ...prev, type: e.target.value }))}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  background: 'rgba(100, 181, 246, 0.05)',\r\n                },\r\n              }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Location\"\r\n              value={newEquipment.location}\r\n              onChange={(e) => setNewEquipment(prev => ({ ...prev, location: e.target.value }))}\r\n              margin=\"normal\"\r\n              required\r\n              sx={{\r\n                '& .MuiOutlinedInput-root': {\r\n                  background: 'rgba(100, 181, 246, 0.05)',\r\n                },\r\n              }}\r\n            />\r\n            <FormControl fullWidth margin=\"normal\">\r\n              <InputLabel sx={{ color: 'text.secondary' }}>Initial Status</InputLabel>\r\n              <Select\r\n                value={newEquipment.status}\r\n                onChange={(e) => setNewEquipment(prev => ({ ...prev, status: e.target.value as any }))}\r\n                label=\"Initial Status\"\r\n                sx={{\r\n                  background: 'rgba(100, 181, 246, 0.05)',\r\n                }}\r\n              >\r\n                <MenuItem value={EQUIPMENT_STATUS.OPERATIONAL}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <CheckCircle sx={{ mr: 1, color: 'success.main' }} />\r\n                    Operational\r\n                  </Box>\r\n                </MenuItem>\r\n                <MenuItem value={EQUIPMENT_STATUS.MAINTENANCE}>\r\n                  <Box display=\"flex\" alignItems=\"center\">\r\n                    <Build sx={{ mr: 1, color: 'info.main' }} />\r\n                    Maintenance\r\n                  </Box>\r\n                </MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions sx={{ p: 3 }}>\r\n          <Button \r\n            onClick={() => setIsCreateDialogOpen(false)}\r\n            sx={{ color: 'text.secondary' }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n          <GlowingButton \r\n            onClick={handleCreateEquipment}\r\n            variant=\"contained\"\r\n            disabled={!newEquipment.name || !newEquipment.type || !newEquipment.location || createEquipmentMutation.isPending}\r\n            glowColor=\"#00e676\"\r\n          >\r\n            {createEquipmentMutation.isPending ? 'Creating...' : 'Create Equipment'}\r\n          </GlowingButton>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Equipment;","import { useQuery, useMutation, useQueryClient } from '@tanstack/react-query';\r\nimport { equipmentAPI } from '../services/api';\r\nimport { Equipment, EquipmentCreateData, SensorData, SensorDataCreateData } from '../types';\r\n\r\n// Equipment queries\r\nexport const useEquipment = (status?: string) => {\r\n  return useQuery({\r\n    queryKey: ['equipment', status],\r\n    queryFn: () => equipmentAPI.getEquipment({ status }),\r\n    staleTime: 30000, // 30 seconds\r\n  });\r\n};\r\n\r\nexport const useEquipmentById = (id: number) => {\r\n  return useQuery({\r\n    queryKey: ['equipment', id],\r\n    queryFn: () => equipmentAPI.getEquipmentById(id),\r\n    enabled: !!id,\r\n  });\r\n};\r\n\r\nexport const useSensorData = (equipmentId: number, limit: number = 20) => {\r\n  return useQuery({\r\n    queryKey: ['sensorData', equipmentId, limit],\r\n    queryFn: () => equipmentAPI.getSensorData(equipmentId, limit),\r\n    enabled: !!equipmentId,\r\n    refetchInterval: 30000, // Refetch every 30 seconds for real-time data\r\n  });\r\n};\r\n\r\n// Equipment mutations\r\nexport const useCreateEquipment = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: (data: EquipmentCreateData) => equipmentAPI.createEquipment(data),\r\n    onSuccess: () => {\r\n      // Invalidate and refetch equipment list\r\n      queryClient.invalidateQueries({ queryKey: ['equipment'] });\r\n    },\r\n  });\r\n};\r\n\r\nexport const useCreateSensorData = () => {\r\n  const queryClient = useQueryClient();\r\n  \r\n  return useMutation({\r\n    mutationFn: ({ equipmentId, data }: { equipmentId: number; data: SensorDataCreateData }) => \r\n      equipmentAPI.createSensorData(equipmentId, data),\r\n    onSuccess: (_, variables) => {\r\n      // Invalidate sensor data for this equipment\r\n      queryClient.invalidateQueries({ \r\n        queryKey: ['sensorData', variables.equipmentId] \r\n      });\r\n    },\r\n  });\r\n};"],"names":["formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatNumber","num","decimals","arguments","length","undefined","minimumFractionDigits","maximumFractionDigits","formatPercent","value","formatDateTime","date","d","Date","DateTimeFormat","year","month","day","hour","minute","anime","require","_ref","animationType","delay","children","sx","props","cardRef","useRef","useEffect","current","card","set","opacity","translateY","includes","translateX","scale","targets","duration","easing","handleMouseEnter","handleMouseLeave","addEventListener","removeEventListener","_jsx","Card","ref","position","overflow","content","top","left","right","bottom","borderRadius","background","transition","zIndex","glowColor","pulseAnimation","buttonRef","button","pulseAnim","boxShadow","loop","pause","Button","border","backdropFilter","color","fontWeight","textTransform","width","height","transform","EQUIPMENT_STATUS","Equipment","statusFilter","setStatusFilter","useState","searchTerm","setSearchTerm","isCreateDialogOpen","setIsCreateDialogOpen","newEquipment","setNewEquipment","name","type","location","status","navigate","useNavigate","titleRef","searchRef","data","equipment","isLoading","error","refetch","useQuery","queryKey","queryFn","equipmentAPI","getEquipment","staleTime","createEquipmentMutation","useCreateEquipment","queryClient","useQueryClient","useMutation","mutationFn","createEquipment","onSuccess","invalidateQueries","getStatusColor","getStatusIcon","CheckCircle","Warning","Error","Build","Engineering","filteredEquipment","filter","item","matchesSearch","toLowerCase","matchesStatus","LoadingSpinner","message","_jsxs","Box","p","Typography","variant","gutterBottom","display","justifyContent","alignItems","mb","WebkitBackgroundClip","WebkitTextFillColor","backgroundClip","textShadow","GlowingButton","startIcon","Add","onClick","AnimatedCard","Grid","container","spacing","xs","md","TextField","fullWidth","placeholder","onChange","e","target","InputProps","startAdornment","InputAdornment","Search","FormControl","InputLabel","Select","label","MenuItem","mr","fontSize","Refresh","disabled","borderColor","map","index","sm","lg","id","cursor","flex","Chip","size","last_maintenance","latest_sensor_data","gap","flexWrap","temperature","icon","Thermostat","speed","Speed","pressure","textAlign","py","mt","Dialog","open","onClose","maxWidth","PaperProps","DialogTitle","DialogContent","component","pt","prev","margin","required","DialogActions","async","mutateAsync","console","isPending"],"sourceRoot":""}