{"version":3,"file":"static/js/820.74230f7c.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/Thermostat.js","../node_modules/@mui/icons-material/esm/Speed.js","utils/format.ts","../node_modules/@mui/icons-material/esm/TrendingUp.js","../node_modules/@mui/material/ButtonGroup/buttonGroupClasses.js","../node_modules/@mui/material/ButtonGroup/ButtonGroup.js","../node_modules/@mui/utils/esm/getValidReactChildren/getValidReactChildren.js","../node_modules/@mui/icons-material/esm/Timeline.js","pages/Analytics.tsx","hooks/useProduction.ts"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15 13V5c0-1.66-1.34-3-3-3S9 3.34 9 5v8c-1.21.91-2 2.37-2 4 0 2.76 2.24 5 5 5s5-2.24 5-5c0-1.63-.79-3.09-2-4m-4-2V5c0-.55.45-1 1-1s1 .45 1 1v1h-1v1h1v2h-1v1h1v1z\"\n}), 'Thermostat');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m20.38 8.57-1.23 1.85a8 8 0 0 1-.22 7.58H5.07A8 8 0 0 1 15.58 6.85l1.85-1.23A10 10 0 0 0 3.35 19a2 2 0 0 0 1.72 1h13.85a2 2 0 0 0 1.74-1 10 10 0 0 0-.27-10.44zm-9.79 6.84a2 2 0 0 0 2.83 0l5.66-8.49-8.49 5.66a2 2 0 0 0 0 2.83\"\n}), 'Speed');","// Utility functions for formatting data\r\n\r\nexport const formatCurrency = (amount: number): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(amount);\r\n};\r\n\r\nexport const formatNumber = (num: number, decimals: number = 0): string => {\r\n  return new Intl.NumberFormat('en-US', {\r\n    minimumFractionDigits: decimals,\r\n    maximumFractionDigits: decimals,\r\n  }).format(num);\r\n};\r\n\r\nexport const formatPercent = (value: number, decimals: number = 1): string => {\r\n  return `${formatNumber(value, decimals)}%`;\r\n};\r\n\r\nexport const formatDate = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatDateTime = (date: string | Date): string => {\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  return new Intl.DateTimeFormat('en-US', {\r\n    year: 'numeric',\r\n    month: 'short',\r\n    day: 'numeric',\r\n    hour: '2-digit',\r\n    minute: '2-digit',\r\n  }).format(d);\r\n};\r\n\r\nexport const formatRelativeTime = (date: string | Date): string => {\r\n  const now = new Date();\r\n  const d = typeof date === 'string' ? new Date(date) : date;\r\n  const diffInSeconds = Math.floor((now.getTime() - d.getTime()) / 1000);\r\n  \r\n  if (diffInSeconds < 60) return 'just now';\r\n  if (diffInSeconds < 3600) return `${Math.floor(diffInSeconds / 60)}m ago`;\r\n  if (diffInSeconds < 86400) return `${Math.floor(diffInSeconds / 3600)}h ago`;\r\n  return `${Math.floor(diffInSeconds / 86400)}d ago`;\r\n};","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m16 6 2.29 2.29-4.88 4.88-4-4L2 16.59 3.41 18l6-6 4 4 6.3-6.29L22 12V6z\"\n}), 'TrendingUp');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getButtonGroupUtilityClass(slot) {\n  return generateUtilityClass('MuiButtonGroup', slot);\n}\nconst buttonGroupClasses = generateUtilityClasses('MuiButtonGroup', ['root', 'contained', 'outlined', 'text', 'disableElevation', 'disabled', 'firstButton', 'fullWidth', 'vertical', 'grouped', 'groupedHorizontal', 'groupedVertical', 'groupedText', 'groupedTextHorizontal', 'groupedTextVertical', 'groupedTextPrimary', 'groupedTextSecondary', 'groupedOutlined', 'groupedOutlinedHorizontal', 'groupedOutlinedVertical', 'groupedOutlinedPrimary', 'groupedOutlinedSecondary', 'groupedContained', 'groupedContainedHorizontal', 'groupedContainedVertical', 'groupedContainedPrimary', 'groupedContainedSecondary', 'lastButton', 'middleButton']);\nexport default buttonGroupClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"disableRipple\", \"fullWidth\", \"orientation\", \"size\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport getValidReactChildren from '@mui/utils/getValidReactChildren';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport buttonGroupClasses, { getButtonGroupUtilityClass } from './buttonGroupClasses';\nimport ButtonGroupContext from './ButtonGroupContext';\nimport ButtonGroupButtonContext from './ButtonGroupButtonContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [{\n    [`& .${buttonGroupClasses.grouped}`]: styles.grouped\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.orientation)}`]\n  }, {\n    [`& .${buttonGroupClasses.grouped}`]: styles[`grouped${capitalize(ownerState.variant)}${capitalize(ownerState.color)}`]\n  }, {\n    [`& .${buttonGroupClasses.firstButton}`]: styles.firstButton\n  }, {\n    [`& .${buttonGroupClasses.lastButton}`]: styles.lastButton\n  }, {\n    [`& .${buttonGroupClasses.middleButton}`]: styles.middleButton\n  }, styles.root, styles[ownerState.variant], ownerState.disableElevation === true && styles.disableElevation, ownerState.fullWidth && styles.fullWidth, ownerState.orientation === 'vertical' && styles.vertical];\n};\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    color,\n    disabled,\n    disableElevation,\n    fullWidth,\n    orientation,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, orientation === 'vertical' && 'vertical', fullWidth && 'fullWidth', disableElevation && 'disableElevation'],\n    grouped: ['grouped', `grouped${capitalize(orientation)}`, `grouped${capitalize(variant)}`, `grouped${capitalize(variant)}${capitalize(orientation)}`, `grouped${capitalize(variant)}${capitalize(color)}`, disabled && 'disabled'],\n    firstButton: ['firstButton'],\n    lastButton: ['lastButton'],\n    middleButton: ['middleButton']\n  };\n  return composeClasses(slots, getButtonGroupUtilityClass, classes);\n};\nconst ButtonGroupRoot = styled('div', {\n  name: 'MuiButtonGroup',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  borderRadius: (theme.vars || theme).shape.borderRadius\n}, ownerState.variant === 'contained' && {\n  boxShadow: (theme.vars || theme).shadows[2]\n}, ownerState.disableElevation && {\n  boxShadow: 'none'\n}, ownerState.fullWidth && {\n  width: '100%'\n}, ownerState.orientation === 'vertical' && {\n  flexDirection: 'column'\n}, {\n  [`& .${buttonGroupClasses.grouped}`]: _extends({\n    minWidth: 40,\n    '&:hover': _extends({}, ownerState.variant === 'contained' && {\n      boxShadow: 'none'\n    })\n  }, ownerState.variant === 'contained' && {\n    boxShadow: 'none'\n  }),\n  [`& .${buttonGroupClasses.firstButton},& .${buttonGroupClasses.middleButton}`]: _extends({}, ownerState.orientation === 'horizontal' && {\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 0\n  }, ownerState.orientation === 'vertical' && {\n    borderBottomRightRadius: 0,\n    borderBottomLeftRadius: 0\n  }, ownerState.variant === 'text' && ownerState.orientation === 'horizontal' && {\n    borderRight: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n    [`&.${buttonGroupClasses.disabled}`]: {\n      borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }\n  }, ownerState.variant === 'text' && ownerState.orientation === 'vertical' && {\n    borderBottom: theme.vars ? `1px solid rgba(${theme.vars.palette.common.onBackgroundChannel} / 0.23)` : `1px solid ${theme.palette.mode === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'}`,\n    [`&.${buttonGroupClasses.disabled}`]: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }\n  }, ownerState.variant === 'text' && ownerState.color !== 'inherit' && {\n    borderColor: theme.vars ? `rgba(${theme.vars.palette[ownerState.color].mainChannel} / 0.5)` : alpha(theme.palette[ownerState.color].main, 0.5)\n  }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n    borderRightColor: 'transparent'\n  }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n    borderBottomColor: 'transparent'\n  }, ownerState.variant === 'contained' && ownerState.orientation === 'horizontal' && {\n    borderRight: `1px solid ${(theme.vars || theme).palette.grey[400]}`,\n    [`&.${buttonGroupClasses.disabled}`]: {\n      borderRight: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }\n  }, ownerState.variant === 'contained' && ownerState.orientation === 'vertical' && {\n    borderBottom: `1px solid ${(theme.vars || theme).palette.grey[400]}`,\n    [`&.${buttonGroupClasses.disabled}`]: {\n      borderBottom: `1px solid ${(theme.vars || theme).palette.action.disabled}`\n    }\n  }, ownerState.variant === 'contained' && ownerState.color !== 'inherit' && {\n    borderColor: (theme.vars || theme).palette[ownerState.color].dark\n  }, {\n    '&:hover': _extends({}, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n      borderRightColor: 'currentColor'\n    }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n      borderBottomColor: 'currentColor'\n    })\n  }),\n  [`& .${buttonGroupClasses.lastButton},& .${buttonGroupClasses.middleButton}`]: _extends({}, ownerState.orientation === 'horizontal' && {\n    borderTopLeftRadius: 0,\n    borderBottomLeftRadius: 0\n  }, ownerState.orientation === 'vertical' && {\n    borderTopRightRadius: 0,\n    borderTopLeftRadius: 0\n  }, ownerState.variant === 'outlined' && ownerState.orientation === 'horizontal' && {\n    marginLeft: -1\n  }, ownerState.variant === 'outlined' && ownerState.orientation === 'vertical' && {\n    marginTop: -1\n  })\n}));\nconst ButtonGroup = /*#__PURE__*/React.forwardRef(function ButtonGroup(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiButtonGroup'\n  });\n  const {\n      children,\n      className,\n      color = 'primary',\n      component = 'div',\n      disabled = false,\n      disableElevation = false,\n      disableFocusRipple = false,\n      disableRipple = false,\n      fullWidth = false,\n      orientation = 'horizontal',\n      size = 'medium',\n      variant = 'outlined'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    color,\n    component,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    orientation,\n    size,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  const context = React.useMemo(() => ({\n    className: classes.grouped,\n    color,\n    disabled,\n    disableElevation,\n    disableFocusRipple,\n    disableRipple,\n    fullWidth,\n    size,\n    variant\n  }), [color, disabled, disableElevation, disableFocusRipple, disableRipple, fullWidth, size, variant, classes.grouped]);\n  const validChildren = getValidReactChildren(children);\n  const childrenCount = validChildren.length;\n  const getButtonPositionClassName = index => {\n    const isFirstButton = index === 0;\n    const isLastButton = index === childrenCount - 1;\n    if (isFirstButton && isLastButton) {\n      return '';\n    }\n    if (isFirstButton) {\n      return classes.firstButton;\n    }\n    if (isLastButton) {\n      return classes.lastButton;\n    }\n    return classes.middleButton;\n  };\n  return /*#__PURE__*/_jsx(ButtonGroupRoot, _extends({\n    as: component,\n    role: \"group\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: /*#__PURE__*/_jsx(ButtonGroupContext.Provider, {\n      value: context,\n      children: validChildren.map((child, index) => {\n        return /*#__PURE__*/_jsx(ButtonGroupButtonContext.Provider, {\n          value: getButtonPositionClassName(index),\n          children: child\n        }, index);\n      })\n    })\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ButtonGroup.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'primary'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['inherit', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, no elevation is used.\n   * @default false\n   */\n  disableElevation: PropTypes.bool,\n  /**\n   * If `true`, the button keyboard focus ripple is disabled.\n   * @default false\n   */\n  disableFocusRipple: PropTypes.bool,\n  /**\n   * If `true`, the button ripple effect is disabled.\n   * @default false\n   */\n  disableRipple: PropTypes.bool,\n  /**\n   * If `true`, the buttons will take up the full width of its container.\n   * @default false\n   */\n  fullWidth: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * The size of the component.\n   * `small` is equivalent to the dense button styling.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['small', 'medium', 'large']), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The variant to use.\n   * @default 'outlined'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['contained', 'outlined', 'text']), PropTypes.string])\n} : void 0;\nexport default ButtonGroup;","import * as React from 'react';\n\n/**\n * Gets only the valid children of a component,\n * and ignores any nullish or falsy child.\n *\n * @param children the children\n */\nexport default function getValidReactChildren(children) {\n  return React.Children.toArray(children).filter(child => /*#__PURE__*/React.isValidElement(child));\n}","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M23 8c0 1.1-.9 2-2 2-.18 0-.35-.02-.51-.07l-3.56 3.55c.05.16.07.34.07.52 0 1.1-.9 2-2 2s-2-.9-2-2c0-.18.02-.36.07-.52l-2.55-2.55c-.16.05-.34.07-.52.07s-.36-.02-.52-.07l-4.55 4.56c.05.16.07.33.07.51 0 1.1-.9 2-2 2s-2-.9-2-2 .9-2 2-2c.18 0 .35.02.51.07l4.56-4.55C8.02 9.36 8 9.18 8 9c0-1.1.9-2 2-2s2 .9 2 2c0 .18-.02.36-.07.52l2.55 2.55c.16-.05.34-.07.52-.07s.36.02.52.07l3.55-3.56C19.02 8.35 19 8.18 19 8c0-1.1.9-2 2-2s2 .9 2 2\"\n}), 'Timeline');","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  ButtonGroup,\r\n  Button,\r\n  Chip,\r\n} from '@mui/material';\r\nimport {\r\n  TrendingUp,\r\n  Assessment,\r\n  Factory,\r\n  Speed,\r\n  Thermostat,\r\n  Timeline,\r\n} from '@mui/icons-material';\r\nimport { Line, Bar, Doughnut } from 'react-chartjs-2';\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement,\r\n} from 'chart.js';\r\nimport { useProductionMetrics } from '../hooks/useProduction';\r\nimport { formatPercent, formatNumber } from '../utils/format';\r\nimport LoadingSpinner from '../components/LoadingSpinner';\r\n\r\n// Register ChartJS components\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  BarElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  ArcElement\r\n);\r\n\r\ntype TimeRange = '24h' | '7d' | '30d' | '90d';\r\ntype MetricType = 'production' | 'efficiency' | 'maintenance' | 'quality';\r\n\r\nconst Analytics: React.FC = () => {\r\n  const [timeRange, setTimeRange] = useState<TimeRange>('24h');\r\n  const [selectedMetric, setSelectedMetric] = useState<MetricType>('production');\r\n  \r\n  const { data: metrics, isLoading, error } = useProductionMetrics();\r\n\r\n  const timeRangeOptions = [\r\n    { value: '24h', label: 'Last 24 Hours' },\r\n    { value: '7d', label: 'Last 7 Days' },\r\n    { value: '30d', label: 'Last 30 Days' },\r\n    { value: '90d', label: 'Last 90 Days' },\r\n  ];\r\n\r\n  // Mock data for charts - in real implementation, this would come from the API\r\n  const productionChartData = {\r\n    labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n    datasets: [\r\n      {\r\n        label: 'Production Volume',\r\n        data: [12000, 19000, 15000, 22000, 18000, 25000],\r\n        borderColor: 'rgb(75, 192, 192)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        tension: 0.1,\r\n      },\r\n      {\r\n        label: 'Target',\r\n        data: [15000, 15000, 15000, 15000, 15000, 15000],\r\n        borderColor: 'rgb(255, 99, 132)',\r\n        backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n        borderDash: [5, 5],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const efficiencyChartData = {\r\n    labels: ['Line A', 'Line B', 'Line C', 'Line D', 'Line E'],\r\n    datasets: [\r\n      {\r\n        label: 'Efficiency (%)',\r\n        data: [87, 92, 78, 95, 89],\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(54, 162, 235, 0.8)',\r\n          'rgba(255, 205, 86, 0.8)',\r\n          'rgba(75, 192, 192, 0.8)',\r\n          'rgba(153, 102, 255, 0.8)',\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const equipmentStatusData = {\r\n    labels: ['Operational', 'Warning', 'Critical', 'Maintenance'],\r\n    datasets: [\r\n      {\r\n        data: [45, 12, 3, 8],\r\n        backgroundColor: [\r\n          '#4caf50',\r\n          '#ff9800',\r\n          '#f44336',\r\n          '#9e9e9e',\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const chartOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top' as const,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        beginAtZero: true,\r\n      },\r\n    },\r\n  };\r\n\r\n  const doughnutOptions = {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        position: 'bottom' as const,\r\n      },\r\n    },\r\n  };\r\n\r\n  if (isLoading) {\r\n    return <LoadingSpinner message=\"Loading analytics...\" />;\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <Box>\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Analytics\r\n        </Typography>\r\n        <Typography color=\"error\">\r\n          Failed to load analytics data. Please try again.\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  const kpiMetrics = [\r\n    {\r\n      title: 'Overall Equipment Effectiveness',\r\n      value: formatPercent(87.5),\r\n      change: '+2.3%',\r\n      trend: 'up',\r\n      icon: <Factory />,\r\n      color: 'success',\r\n    },\r\n    {\r\n      title: 'Production Efficiency',\r\n      value: formatPercent(92.1),\r\n      change: '+5.1%',\r\n      trend: 'up',\r\n      icon: <TrendingUp />,\r\n      color: 'success',\r\n    },\r\n    {\r\n      title: 'Quality Rate',\r\n      value: formatPercent(98.7),\r\n      change: '-0.2%',\r\n      trend: 'down',\r\n      icon: <Assessment />,\r\n      color: 'warning',\r\n    },\r\n    {\r\n      title: 'Downtime Hours',\r\n      value: '12.5',\r\n      change: '-15.3%',\r\n      trend: 'down',\r\n      icon: <Timeline />,\r\n      color: 'success',\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h4\">Analytics & Insights</Typography>\r\n        <Box display=\"flex\" gap={2}>\r\n          <FormControl size=\"small\" sx={{ minWidth: 150 }}>\r\n            <InputLabel>Time Range</InputLabel>\r\n            <Select\r\n              value={timeRange}\r\n              onChange={(e) => setTimeRange(e.target.value as TimeRange)}\r\n              label=\"Time Range\"\r\n            >\r\n              {timeRangeOptions.map((option) => (\r\n                <MenuItem key={option.value} value={option.value}>\r\n                  {option.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Box>\r\n      </Box>\r\n\r\n      {/* KPI Cards */}\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        {kpiMetrics.map((metric, index) => (\r\n          <Grid item xs={12} sm={6} md={3} key={index}>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\" justifyContent=\"space-between\">\r\n                  <Box>\r\n                    <Typography variant=\"h4\" color={`${metric.color}.main`}>\r\n                      {metric.value}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {metric.title}\r\n                    </Typography>\r\n                    <Box display=\"flex\" alignItems=\"center\" mt={1}>\r\n                      <Chip\r\n                        label={metric.change}\r\n                        size=\"small\"\r\n                        color={metric.trend === 'up' ? 'success' : 'warning'}\r\n                        sx={{ fontSize: '0.7rem' }}\r\n                      />\r\n                    </Box>\r\n                  </Box>\r\n                  <Box sx={{ color: `${metric.color}.main` }}>\r\n                    {metric.icon}\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n\r\n      {/* Metric Selection */}\r\n      <Box mb={3}>\r\n        <ButtonGroup variant=\"outlined\" aria-label=\"metric selection\">\r\n          <Button\r\n            variant={selectedMetric === 'production' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedMetric('production')}\r\n            startIcon={<Factory />}\r\n          >\r\n            Production\r\n          </Button>\r\n          <Button\r\n            variant={selectedMetric === 'efficiency' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedMetric('efficiency')}\r\n            startIcon={<Speed />}\r\n          >\r\n            Efficiency\r\n          </Button>\r\n          <Button\r\n            variant={selectedMetric === 'maintenance' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedMetric('maintenance')}\r\n            startIcon={<Thermostat />}\r\n          >\r\n            Equipment Status\r\n          </Button>\r\n          <Button\r\n            variant={selectedMetric === 'quality' ? 'contained' : 'outlined'}\r\n            onClick={() => setSelectedMetric('quality')}\r\n            startIcon={<Assessment />}\r\n          >\r\n            Quality\r\n          </Button>\r\n        </ButtonGroup>\r\n      </Box>\r\n\r\n      {/* Charts */}\r\n      <Grid container spacing={3}>\r\n        {/* Main Chart */}\r\n        <Grid item xs={12} md={8}>\r\n          <Card>\r\n            <CardContent>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                {selectedMetric === 'production' && 'Production Volume Trend'}\r\n                {selectedMetric === 'efficiency' && 'Efficiency by Production Line'}\r\n                {selectedMetric === 'maintenance' && 'Equipment Status Distribution'}\r\n                {selectedMetric === 'quality' && 'Quality Metrics Over Time'}\r\n              </Typography>\r\n              <Box height={400}>\r\n                {selectedMetric === 'production' && (\r\n                  <Line data={productionChartData} options={chartOptions} />\r\n                )}\r\n                {selectedMetric === 'efficiency' && (\r\n                  <Bar data={efficiencyChartData} options={chartOptions} />\r\n                )}\r\n                {selectedMetric === 'maintenance' && (\r\n                  <Doughnut data={equipmentStatusData} options={doughnutOptions} />\r\n                )}\r\n                {selectedMetric === 'quality' && (\r\n                  <Line data={productionChartData} options={chartOptions} />\r\n                )}\r\n              </Box>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Side Panel */}\r\n        <Grid item xs={12} md={4}>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Performance Summary\r\n                  </Typography>\r\n                  <Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n                      <Typography variant=\"body2\">Production Target</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\">\r\n                        {formatNumber(125000)} units\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n                      <Typography variant=\"body2\">Actual Production</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        {formatNumber(131250)} units\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" mb={2}>\r\n                      <Typography variant=\"body2\">Efficiency</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        {formatPercent(105)}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box display=\"flex\" justifyContent=\"space-between\">\r\n                      <Typography variant=\"body2\">Cost Savings</Typography>\r\n                      <Typography variant=\"body2\" fontWeight=\"bold\" color=\"success.main\">\r\n                        $25,340\r\n                      </Typography>\r\n                    </Box>\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <Card>\r\n                <CardContent>\r\n                  <Typography variant=\"h6\" gutterBottom>\r\n                    Top Performing Assets\r\n                  </Typography>\r\n                  <Box>\r\n                    {[\r\n                      { name: 'CNC Machine #1', efficiency: 98.5 },\r\n                      { name: 'Robotic Arm #3', efficiency: 97.2 },\r\n                      { name: 'Assembly Line A', efficiency: 96.8 },\r\n                      { name: 'Quality Station #2', efficiency: 95.9 },\r\n                    ].map((asset, index) => (\r\n                      <Box key={index} display=\"flex\" justifyContent=\"space-between\" mb={1}>\r\n                        <Typography variant=\"body2\">{asset.name}</Typography>\r\n                        <Chip\r\n                          label={formatPercent(asset.efficiency)}\r\n                          size=\"small\"\r\n                          color=\"success\"\r\n                          sx={{ fontSize: '0.7rem' }}\r\n                        />\r\n                      </Box>\r\n                    ))}\r\n                  </Box>\r\n                </CardContent>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Analytics;","import { useQuery } from '@tanstack/react-query';\r\nimport { productionAPI, maintenanceAPI } from '../services/api';\r\n\r\nexport const useProductionMetrics = () => {\r\n  return useQuery({\r\n    queryKey: ['productionMetrics'],\r\n    queryFn: productionAPI.getProductionMetrics,\r\n    staleTime: 60000, // 1 minute\r\n  });\r\n};\r\n\r\nexport const useDashboardSummary = () => {\r\n  return useQuery({\r\n    queryKey: ['dashboardSummary'],\r\n    queryFn: productionAPI.getDashboardSummary,\r\n    staleTime: 30000, // 30 seconds\r\n    refetchInterval: 30000, // Auto-refresh every 30 seconds\r\n  });\r\n};\r\n\r\nexport const useProductionRecords = (params?: {\r\n  equipment_id?: number;\r\n  shift?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['productionRecords', params],\r\n    queryFn: () => productionAPI.getProductionRecords(params),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceAlerts = (priority?: string) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceAlerts', priority],\r\n    queryFn: () => maintenanceAPI.getMaintenanceAlerts({ priority }),\r\n    staleTime: 60000,\r\n  });\r\n};\r\n\r\nexport const useMaintenanceLogs = (params?: {\r\n  equipment_id?: number;\r\n  status?: string;\r\n}) => {\r\n  return useQuery({\r\n    queryKey: ['maintenanceLogs', params],\r\n    queryFn: () => maintenanceAPI.getMaintenanceLogs(params),\r\n    staleTime: 60000,\r\n  });\r\n};"],"names":["createSvgIcon","_jsx","d","formatCurrency","amount","Intl","NumberFormat","style","currency","format","formatNumber","num","decimals","arguments","length","undefined","minimumFractionDigits","maximumFractionDigits","formatPercent","value","formatDateTime","date","Date","DateTimeFormat","year","month","day","hour","minute","getButtonGroupUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","ButtonGroupRoot","styled","name","overridesResolver","props","styles","ownerState","buttonGroupClasses","grouped","capitalize","orientation","variant","color","firstButton","lastButton","middleButton","root","disableElevation","fullWidth","vertical","_ref","theme","_extends","display","borderRadius","vars","shape","boxShadow","shadows","width","flexDirection","minWidth","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","borderRight","palette","common","onBackgroundChannel","mode","disabled","action","borderBottom","borderColor","mainChannel","alpha","main","borderRightColor","borderBottomColor","grey","dark","borderTopLeftRadius","marginLeft","marginTop","React","inProps","ref","useDefaultProps","children","className","component","disableFocusRipple","disableRipple","size","other","_objectWithoutPropertiesLoose","classes","slots","composeClasses","useUtilityClasses","context","validChildren","toArray","filter","child","getValidReactChildren","childrenCount","getButtonPositionClassName","index","isFirstButton","isLastButton","as","role","clsx","ButtonGroupContext","Provider","map","ButtonGroupButtonContext","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","BarElement","Title","Tooltip","Legend","ArcElement","Analytics","timeRange","setTimeRange","useState","selectedMetric","setSelectedMetric","data","metrics","isLoading","error","useProductionMetrics","productionChartData","labels","datasets","label","backgroundColor","tension","borderDash","chartOptions","responsive","maintainAspectRatio","plugins","legend","position","scales","y","beginAtZero","LoadingSpinner","message","_jsxs","Box","Typography","gutterBottom","kpiMetrics","title","change","trend","icon","Factory","TrendingUp","Assessment","Timeline","justifyContent","alignItems","mb","gap","FormControl","sx","InputLabel","Select","onChange","e","target","option","MenuItem","Grid","container","spacing","metric","item","xs","sm","md","Card","CardContent","mt","Chip","fontSize","ButtonGroup","Button","onClick","startIcon","Speed","Thermostat","height","Line","options","Bar","Doughnut","fontWeight","efficiency","asset","useQuery","queryKey","queryFn","productionAPI","getProductionMetrics","staleTime","useDashboardSummary","getDashboardSummary","refetchInterval"],"sourceRoot":""}